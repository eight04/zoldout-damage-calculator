{"version":3,"file":"tome-ce7048c6.js","sources":["../node_modules/svelte/internal/index.mjs","../src/lib/SortButton.svelte","../src/lib/env.mjs","../src/lib/Nav.svelte","../node_modules/svelte/store/index.mjs","../src/lib/store.mjs","../src/lib/passive.mjs","../src/lib/simulator.mjs","../src/lib/App.svelte","../src/weapons/tome.mjs"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.50.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\r\nexport let method, field, text;\r\n\r\nfunction sort() {\r\n  if (method.field !== field) {\r\n    method.field = field;\r\n    method.dir = 1;\r\n  } else {\r\n    method.dir *= -1;\r\n  }\r\n}\r\n</script>\r\n<button\r\n  class:sorted={method.field === field}\r\n  class:reversed={method.dir < 0}\r\n  on:click={sort}>{text}</button>\r\n\r\n\r\n<style>\r\n.sorted::after {\r\n  content: \"↓\";\r\n}\r\n.sorted.reversed::after {\r\n  content: \"↑\";\r\n}\r\n</style>\r\n","/* eslint-env browser */\r\nconst match = location.pathname.match(/([^/.]*)(\\.html)?$/);\r\nexport const currentPage = !match[1] || match[1] === \"index\" ? \"sword\" : match[1];\r\n","<script>\r\nimport {currentPage as page} from \"./env.mjs\";\r\n</script>\r\n\r\n<ul>\r\n  <li class:active={page === \"sword\"}><a href=\".\">劍</a></li>\r\n  <li class:active={page === \"bow\"}><a href=\"bow.html\">弓</a></li>\r\n  <li class:active={page === \"wand\"}><a href=\"wand.html\">杖</a></li>\r\n  <li class:active={page === \"tome\"}><a href=\"tome.html\">書</a></li>\r\n</ul>\r\n\r\n<style>\r\nul {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: .2em;\r\n}\r\na {\r\n  display: block;\r\n  padding: .4em .8em;\r\n}\r\n.active a {\r\n  background: #eee;\r\n}\r\n</style>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/* eslint-env browser */\r\n\r\nimport {writable} from \"svelte/store\";\r\n\r\nconst key = \"zoldout-damage-calculator\";\r\nconst cache = new Map;\r\n\r\nexport function getStore(name, default_) {\r\n  if (cache.has(name)) return cache.get(name);\r\n  \r\n  const store = writable(\r\n    parseJSON(localStorage.getItem(`${key}/${name}`)) ??\r\n    default_\r\n  );\r\n  store.subscribe(value => \r\n    localStorage.setItem(`${key}/${name}`, JSON.stringify(value))\r\n  );\r\n  \r\n  cache.set(name, store);\r\n  return store;\r\n}\r\n\r\nfunction parseJSON(text) {\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch {\r\n    // pass\r\n  }\r\n}\r\n","export default [\r\n  {\r\n    name: \"傷害後攻擊增加（艾莉諾拉）\",\r\n    type: \"bow\",\r\n    afterHit: state => {\r\n      state.buff.push({atk: 5, times: 99});\r\n      if (state.totalHit === 1) {\r\n        state.buff.push({bonus: 0.3 * 1.7 + 0.7 * 1, times: 99});\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"使用武器後中毒（格蕾絲）\",\r\n    type: \"bow\",\r\n    afterWeapon: (state) => {\r\n      if (state.hit) {\r\n        state.poison.push({\r\n          atk: 300,\r\n          turn: 2,\r\n          bonus: 0\r\n        });\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"使用火武器後加速（歌莉雅）\",\r\n    type: \"wand\",\r\n    afterWeapon: (state, weapon) => {\r\n      if (weapon.fire?.atk) {\r\n        state.cost -= 2;\r\n        if (state.targetBuff.every(b => !b.goriya)) {\r\n          state.targetBuff.push({injuryBonus: 10, times: 99, goriya: true});\r\n          state.targetBuff.push({fireResist: -10, times: 99, goriya: true});\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"額外傷害（尤里+泳裝伊蓮）\",\r\n    type: \"wand\",\r\n    afterWeapon: (state, weapon) => {\r\n      if (weapon.water) {\r\n        state.damage += (900 - state.getDef({atkType: \"magic\"})) * 2;\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"魔攻增加（西比拉）\",\r\n    type: \"wand\",\r\n    beforeWeapon: (state, weapon) => {\r\n      if (weapon.casting >= 6 && state.hit) {\r\n        state.buff.push({bonus: 25, times: 1});\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"生命回復（塔尼亞）\",\r\n    type: \"tome\",\r\n    afterWeapon: (state, weapon) => {\r\n      if (!state.hit || weapon.atkType === \"heal\") {\r\n        state.damage += 360;\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"加速（塔尼亞）\",\r\n    type: \"tome\",\r\n    afterWeapon: (state, weapon) => {\r\n      if (!state.hit || weapon.atkType === \"heal\") {\r\n        state.cost--;\r\n      }\r\n    }\r\n  }\r\n];\r\n","import allPassive from \"./passive.mjs\";\r\n\r\n// NOTE: we use F++ instead of F\r\nconst WEAPON_MOD = {\r\n  F: 0.85,\r\n  E0: 1, // 初始武器卡無法造出++\r\n  E: 1.1,\r\n  D: 1.35,\r\n  C: 1.6,\r\n  B: 1.85,\r\n  A: 2.1,\r\n  S: 2.35,\r\n  SS: 2.6,\r\n  SSS: 2.85, // FIXME: confirm this\r\n};\r\n\r\nclass State {\r\n  constructor({\r\n    atk, def, int, mdef,\r\n    fireResist, waterResist, poisonResist, lightningResist,\r\n    poisonTurns,\r\n    passive\r\n  }) {\r\n    this.atk = atk;\r\n    this.def = def;\r\n    this.int = int;\r\n    this.mdef = mdef;\r\n\r\n    this.fireResist = fireResist;\r\n    this.waterResist = waterResist;\r\n    this.poisonResist = poisonResist;\r\n    this.lightningResist = lightningResist;\r\n\r\n    this.poisonTurns = poisonTurns;\r\n    this.passive = passive;\r\n\r\n    this.damage = 0;\r\n    this.hit = 0;\r\n    this.totalHit = 0;\r\n    this.stance = 0;\r\n    this.totalHit = 0;\r\n    this.buff = [];\r\n    this.targetBuff = [];\r\n\r\n    this.poison = [];\r\n    this.lightning = {};\r\n  }\r\n  getDef(weapon) {\r\n    return getDef(this, weapon);\r\n  }\r\n  getFireResist() {\r\n    return this.fireResist + this.targetBuff.reduce((output, b) => output + (b.fireResist || 0), 0);\r\n  }\r\n  getInjuryBonus() {\r\n    const bonus = this.targetBuff.reduce((output, b) => output + (b.injuryBonus || 0), 0);\r\n    return (bonus + 100) / 100;\r\n  }\r\n  getWaterAtk({atk, modLv, modType}) {\r\n    return getAtk(this, {modType, modLv, atk});\r\n  }\r\n}\r\n\r\nexport function simulate({\r\n  weapons, passiveIds, ...options\r\n}) {\r\n  const passive = allPassive.filter((p, i) => passiveIds.includes(i));\r\n  const stages = [];\r\n  const state = new State({...options, passive});\r\n  for (const weapon of weapons) {\r\n    const result = calculateDamage(state, weapon);\r\n    stages.push(result);\r\n  }\r\n  const finalDamage = stages.reduce((o, s) => o + s.damage, 0);\r\n  const finalCost = stages.reduce((o, s) => o + s.cost, 0);\r\n  return {\r\n    stages,\r\n    summary: {\r\n      damage: finalDamage,\r\n      cost: finalCost,\r\n      cp: finalDamage / finalCost\r\n    }\r\n  };\r\n}\r\n\r\nfunction getDef({def, mdef, targetBuff: buff}, {atkType}) {\r\n  if (atkType === \"heal\") return 0;\r\n  if (atkType === \"magic\") {\r\n    return mdef + buff.reduce((output, b) => output + (b.mdef || 0), 0);\r\n  }\r\n  return def + buff.reduce((output, b) => output + (b.def || 0), 0);\r\n}\r\n\r\nfunction getAtk({atk, int, buff}, {modType, modLv, atk: weaponAtk = 0, bonus = 0}) {\r\n  const charAtk = modType === \"int\" ?\r\n    int + buff.reduce((output, b) => output + (b.int || 0), 0) :\r\n    atk + buff.reduce((output, b) => output + (b.atk || 0), 0);\r\n  return (weaponAtk + (modLv ? charAtk * WEAPON_MOD[modLv] : 0))\r\n    * (bonus + 100) / 100;\r\n}\r\n\r\nfunction getPoisonDamage({poison, poisonTurns, poisonResist}) {\r\n  let damage = 0;\r\n  for (const p of poison) {\r\n    damage += p.atk * Math.min(p.turn, poisonTurns) / p.turn * (100 - poisonResist) / 100;\r\n  }\r\n  return damage;\r\n}\r\n\r\nfunction calculatePassive(state, weapon, key) {\r\n  state.passive.forEach(p => p[key]?.(state, weapon));\r\n}\r\n\r\nfunction calculateDamage(state, weapon) {\r\n  const oldPoisonDamage = getPoisonDamage(state);\r\n\r\n  state.cost = weapon.casting || weapon.cost;\r\n  state.hit = weapon.hit || (weapon.atk || weapon.modLv ? 1 : 0);\r\n  state.damage = 0;\r\n  const def = getDef(state, weapon);\r\n  calculatePassive(state, weapon, \"beforeWeapon\");\r\n  for (let i = 0; i < state.hit; i++) {\r\n    state.currentHit = i + 1;\r\n    state.totalHit++;\r\n    let atk = getAtk(state, weapon);\r\n    atk *= state.buff.reduce((output, b) => output * (b.bonus ? (b.bonus + 100) / 100 : 1), 1);\r\n    if (weapon.stance?.use === state.stance) {\r\n      atk *= ((weapon.stance.bonus || 0) + 100) / 100;\r\n    }\r\n    // FIXME: is it possible to have negative def?\r\n    state.damage += Math.max(atk - def, 1) * state.getInjuryBonus();\r\n    if (state.lightning?.atk) {\r\n      state.damage += state.lightning.atk * (100 - state.lightningResist) / 100;\r\n    }\r\n    calculatePassive(state, weapon, \"afterHit\");\r\n  }\r\n\r\n  if (state.hit) {\r\n    state.buff = state.buff.map(b => ({...b, times: b.times - 1})).filter(b => b.times > 0);\r\n    state.targetBuff = state.targetBuff.map(b => ({...b, times: b.times - 1})).filter(b => b.times > 0);\r\n  }\r\n\r\n  if (weapon.trap) {\r\n    state.damage += Math.max(weapon.trap.atk - def, 1);\r\n  }\r\n\r\n  if (weapon.fire?.atk) {\r\n    state.damage += weapon.fire.atk * (100 - state.getFireResist()) / 100;\r\n  }\r\n\r\n  if (weapon.water) {\r\n    state.damage += state.getWaterAtk(weapon.water) * (100 - state.waterResist) / 100;\r\n  }\r\n\r\n  if (weapon.lightning?.atk) {\r\n    state.damage += weapon.lightning.atk * (100 - state.lightningResist) / 100;\r\n    if (!state.lightning?.atk || weapon.lightning.time > state.lightning.time) {\r\n      state.lightning = weapon.lightning;\r\n    }\r\n  }\r\n\r\n  if (weapon.poison?.atk) {\r\n    state.poison.push({\r\n      atk: weapon.poison.atk,\r\n      turn: weapon.poison.turn,\r\n      bonus: 0\r\n    });\r\n  }\r\n  if (weapon.poison?.bonus) {\r\n    state.poison = state.poison.map(p => {\r\n      const newBonus = (p.bonus + 100) * (weapon.poison.bonus + 100) / 100 - 100;\r\n      return {...p, bonus: Math.min(newBonus, 200)};\r\n    });\r\n  }\r\n\r\n  if (weapon.buff) {\r\n    state.buff.push(...weapon.buff);\r\n  }\r\n  if (weapon.targetBuff) {\r\n    state.targetBuff.push(...weapon.targetBuff);\r\n  }\r\n\r\n  if (weapon?.stance?.use === state.stance && weapon.stance.buff) {\r\n    state.buff.push(...weapon.stance.buff);\r\n  }\r\n\r\n  if (weapon?.stance?.gain != null) {\r\n    state.stance = weapon.stance.gain;\r\n  }\r\n\r\n  calculatePassive(state, weapon, \"afterWeapon\");\r\n\r\n  state.damage += getPoisonDamage(state) - oldPoisonDamage;\r\n\r\n  return {damage: state.damage, cost: state.cost};\r\n}\r\n","<script>\r\nimport SortButton from \"./SortButton.svelte\";\r\nimport Nav from \"./Nav.svelte\";\r\n\r\nimport {currentPage} from \"./env.mjs\";\r\nimport {getStore} from \"./store.mjs\";\r\nimport {simulate} from \"./simulator.mjs\";\r\nimport passive from \"./passive.mjs\";\r\n\r\nexport let weapons, storeKey;\r\n\r\nconst NAME_TO_WEAPON = Object.fromEntries(weapons.map(w => [w.name, w]));\r\n\r\nconst atk = getStore(`${storeKey}/atk`, 700);\r\nconst def = getStore(`${storeKey}/def`, 200);\r\nconst int = getStore(`${storeKey}/int`, 700);\r\nconst mdef = getStore(`${storeKey}/mdef`, 200);\r\n\r\nconst fireResist = getStore(`${storeKey}/fireResist`, 0);\r\nconst waterResist = getStore(`${storeKey}/waterResist`, 0);\r\nconst poisonResist = getStore(`${storeKey}/poisonResist`, 0);\r\nconst lightningResist = getStore(`${storeKey}/lightningResist`, 0);\r\n\r\nconst poisonTurns = getStore(`${storeKey}/poisonTurns`, 99);\r\nconst passiveIds = getStore(`${storeKey}/passiveIds`, []);\r\n\r\nconst compareList = getStore(`${storeKey}/compareList`, weapons.map(w => [w.name]));\r\nconst sortMethod = getStore(`${storeKey}/sortMethod`, {\r\n  field: null,\r\n  dir: 1\r\n});\r\n\r\nlet combos = [weapons[0]];\r\nlet result = {\r\n  stages: [],\r\n  summary: {\r\n    damage: 0,\r\n    cost: 0,\r\n    cp: 0\r\n  }\r\n};\r\nlet calcedCompareList = [];\r\nlet sortedCompareList = [];\r\nlet options = {};\r\n\r\n$: {\r\n  options = {\r\n    atk: $atk,\r\n    def: $def,\r\n    int: $int,\r\n    mdef: $mdef,\r\n\r\n    poisonTurns: $poisonTurns,\r\n    passiveIds: $passiveIds,\r\n\r\n    fireResist: $fireResist,\r\n    waterResist: $waterResist,\r\n    poisonResist: $poisonResist,\r\n    lightningResist: $lightningResist\r\n  };\r\n}\r\n\r\n$: {\r\n  result = simulate({\r\n    ...options,\r\n    weapons: combos,\r\n  });\r\n}\r\n\r\n$: {\r\n  calcedCompareList = $compareList.map((names, i) => {\r\n    const weapons = names.map(n => NAME_TO_WEAPON[n]);\r\n    const result = simulate({\r\n      ...options,\r\n      weapons,\r\n    });\r\n    return {\r\n      name: names.join(\"+\"),\r\n      cost: result.summary.cost,\r\n      damage: result.summary.damage,\r\n      cp: result.summary.cp,\r\n      index: i\r\n    };\r\n  });\r\n}\r\n\r\n$: {\r\n  sortedCompareList = calcedCompareList.slice();\r\n  if ($sortMethod.field) {\r\n    sortedCompareList.sort((a, b) => {\r\n      let result = a[$sortMethod.field] < b[$sortMethod.field] ? -1 :\r\n        a[$sortMethod.field] > b[$sortMethod.field] ? 1 : 0;\r\n      return result * $sortMethod.dir;\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCombo(i) {\r\n  combos.splice(i, 0, combos[i]);\r\n  combos = combos;\r\n}\r\n\r\nfunction deleteCombo(i) {\r\n  if (combos.length <= 1) return;\r\n  combos.splice(i, 1);\r\n  combos = combos;\r\n}\r\n\r\nfunction moveCombo(i, dir) {\r\n  const t = combos[i];\r\n  combos.splice(i, 1);\r\n  combos.splice(i + dir, 0, t);\r\n  combos = combos;\r\n}\r\n\r\nfunction addToCompare() {\r\n  $compareList.push(combos.map(w => w.name));\r\n  $compareList = $compareList;\r\n}\r\n\r\nfunction deleteCompare(i) {\r\n  $compareList.splice(i, 1);\r\n  $compareList = $compareList;\r\n}\r\n\r\n</script>\r\n\r\n<h1>Zold:Out Damage Calculator</h1>\r\n\r\n<Nav />\r\n\r\n<div class=\"base-info\">\r\n  <span>力量</span>\r\n  <input type=\"number\" bind:value={$atk}>\r\n  <span>防禦</span>\r\n  <input type=\"number\" bind:value={$def}>\r\n  <span>智力</span>\r\n  <input type=\"number\" bind:value={$int}>\r\n  <span>魔防</span>\r\n  <input type=\"number\" bind:value={$mdef}>\r\n  <span>火抗</span>\r\n  <input type=\"number\" bind:value={$fireResist}>\r\n  <span>水抗</span>\r\n  <input type=\"number\" bind:value={$waterResist}>\r\n  <span>毒抗</span>\r\n  <input type=\"number\" bind:value={$poisonResist}>\r\n  <span>雷抗</span>\r\n  <input type=\"number\" bind:value={$lightningResist}>\r\n  <span>中毒發生次數</span>\r\n  <input type=\"number\" bind:value={$poisonTurns}>\r\n  {#each passive as p, i}\r\n    {#if currentPage === p.type}\r\n      <label class=\"cspan\">\r\n        <input type=\"checkbox\" bind:group={$passiveIds} value={i}>\r\n        <span>{p.name}</span>\r\n      </label>\r\n    {/if}\r\n  {/each}\r\n</div>\r\n\r\n<h2>Combo</h2>\r\n\r\n<div class=\"combo-table\">\r\n  <span class=\"chead\">Weapon</span>\r\n  <span class=\"chead\">Cost</span>\r\n  <span class=\"chead\">Damage</span>\r\n  <span class=\"chead\">CP</span>\r\n  <span class=\"operation\"></span>\r\n  {#each combos as weapon, i}\r\n    <select bind:value={weapon}>\r\n      {#each weapons as w}\r\n        <option value={w}>{w.name}</option>\r\n      {/each}\r\n    </select>\r\n    <span>\r\n      {result.stages[i]?.cost}\r\n    </span>\r\n    <span>\r\n      {result.stages[i]?.damage.toFixed(0)}\r\n    </span>\r\n    <span>\r\n      {((result.stages[i]?.damage || 0) / result.stages[i]?.cost).toFixed(0)}\r\n    </span>\r\n    <div class=\"operation\">\r\n      <button on:click={() => moveCombo(i, -1)}>&uarr;</button>\r\n      <button on:click={() => moveCombo(i, 1)}>&darr;</button>\r\n      <button on:click={() => addCombo(i)}>&#x2398;</button>\r\n      <button on:click={() => deleteCombo(i)}>x</button>\r\n    </div>\r\n  {/each}\r\n  <span class=\"chead\">Summary</span>\r\n  <span>{result.summary.cost}</span>\r\n  <span>{result.summary.damage.toFixed(0)}</span>\r\n  <span>{result.summary.cp.toFixed(0)}</span>\r\n</div>\r\n\r\n<button on:click={addToCompare}>Add to compare list</button>\r\n\r\n<h2>Compare</h2>\r\n\r\n<div class=\"compare-list\">\r\n  <SortButton field=\"name\" text=\"Name\" bind:method={$sortMethod} />\r\n  <SortButton field=\"cost\" text=\"Cost\" bind:method={$sortMethod} />\r\n  <SortButton field=\"damage\" text=\"Damage\" bind:method={$sortMethod} />\r\n  <SortButton field=\"cp\" text=\"CP\" bind:method={$sortMethod} />\r\n  <span></span>\r\n  {#each sortedCompareList as row}\r\n    <span>{row.name}</span>\r\n    <span>{row.cost}</span>\r\n    <span>{row.damage.toFixed(0)}</span>\r\n    <span>{row.cp.toFixed(0)}</span>\r\n    <button on:click={() => deleteCompare(row.index)}>x</button>\r\n  {/each}\r\n</div>\r\n\r\n<footer>\r\n  <a href=\"https://github.com/eight04/zoldout-damage-calculator\">zoldout-damage-calculator</a>\r\n</footer>\r\n\r\n<style>\r\n:global(body) {\r\n  font-size: 16px;\r\n  font-family: sans-serif;\r\n  margin: 2em auto;\r\n  max-width: 600px;\r\n  padding: 0 .6em;\r\n}\r\n:global(input), :global(button), :global(select) {\r\n  font-size: .95em;\r\n  font-family: inherit;\r\n  padding: .3em .6em;\r\n  vertical-align: middle;\r\n}\r\n:global(input[type=number]) {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n.base-info {\r\n  display: grid;\r\n  grid-template-columns: max-content 1fr max-content 1fr;\r\n  align-items: center;\r\n  gap: 1em;\r\n  margin: 1em 0;\r\n}\r\n.combo-table {\r\n  width: fit-content;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, auto);\r\n  align-items: center;\r\n  gap: .2em;\r\n  margin: 1em 0;\r\n}\r\n@media (max-width: 600px) {\r\n  .combo-table {\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n  .operation {\r\n    grid-column-end: span 4;\r\n  }\r\n}\r\n.combo-table > * {\r\n  padding: .3em .6em;\r\n}\r\n.chead {\r\n  background: #eee;\r\n  font-weight: bold;\r\n}\r\n.cspan {\r\n  grid-column-end: span 2;\r\n}\r\n.compare-list {\r\n  width: fit-content;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, auto);\r\n  align-items: center;\r\n  gap: .2em;\r\n  margin: 1em 0;\r\n}\r\n.compare-list > * {\r\n  padding: .3em .6em;\r\n}\r\nfooter {\r\n  text-align: center;\r\n  margin: 1.2em;\r\n}\r\n</style>\r\n","const weapons = [\r\n  {\r\n    name: \"閃耀之書\",\r\n    cost: 4,\r\n    grade: 1,\r\n    atk: 230,\r\n    atkType: \"magic\",\r\n    modLv: \"E\",\r\n    modType: \"str\",\r\n  },\r\n  {\r\n    name: \"憤怒之書\",\r\n    cost: 2,\r\n    grade: 1,\r\n    buff: [{bonus: 15, times: 1}]\r\n  },\r\n  {\r\n    name: \"大回復之書\",\r\n    cost: 7,\r\n    grade: 1,\r\n    atk: 180,\r\n    atkType: \"heal\",\r\n    modLv: \"D\",\r\n    modType: \"int\"\r\n  },\r\n  {\r\n    name: \"淨化之書\",\r\n    cost: 3,\r\n    grade: 1,\r\n    atk: 30,\r\n    atkType: \"heal\",\r\n    modLv: \"F\",\r\n    modType: \"int\"\r\n  },\r\n  {\r\n    name: \"燃燒之書\",\r\n    cost: 4,\r\n    grade: 1,\r\n    atk: 150,\r\n    atkType: \"magic\",\r\n    modLv: \"F\",\r\n    modType: \"str\",\r\n    fire: {\r\n      atk: 220,\r\n      time: 4\r\n    }\r\n  },\r\n  {\r\n    name: \"加速之書\",\r\n    cost: 4 - 1,\r\n    grade: 1,\r\n    atk: 110,\r\n    atkType: \"heal\",\r\n    modLv: \"F\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"快速回復之書\",\r\n    cost: 4,\r\n    grade: 2,\r\n    atk: 200,\r\n    atkType: \"heal\",\r\n    modLv: \"D\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"觸電之書\",\r\n    cost: 3,\r\n    grade: 1,\r\n    atk: 50,\r\n    atkType: \"magic\",\r\n    modLv: \"E\",\r\n    modType: \"str\",\r\n    lightning: {\r\n      atk: 50,\r\n      time: 6\r\n    }\r\n  },\r\n  {\r\n    name: \"聖光之書\",\r\n    cost: 4,\r\n    grade: 2,\r\n    atk: 230,\r\n    atkType: \"magic\",\r\n    modLv: \"D\",\r\n    modType: \"str\",\r\n  },\r\n  {\r\n    name: \"智慧之書\",\r\n    cost: 4,\r\n    grade: 2,\r\n    buff: [{int: 200, times: 99}]\r\n  },\r\n  {\r\n    name: \"高階回復之書\",\r\n    cost: 7,\r\n    grade: 2,\r\n    atk: 100,\r\n    atkType: \"heal\",\r\n    modLv: \"C\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"自由火蝶\",\r\n    cost: 4,\r\n    grade: 4,\r\n    fire: {\r\n      atk: 720,\r\n      time: 4\r\n    }\r\n  },\r\n  {\r\n    name: \"清淨如水\",\r\n    cost: 6,\r\n    grade: 3,\r\n    atk: 155,\r\n    atkType: \"heal\",\r\n    modLv: \"F\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"雷電蜂\",\r\n    cost: 4,\r\n    grade: 3,\r\n    atk: 100,\r\n    atkType: \"magic\",\r\n    modLv: \"D\",\r\n    modType: \"str\",\r\n    lightning: {\r\n      atk: 145,\r\n      time: 10\r\n    }\r\n  },\r\n  {\r\n    name: \"猛炎之書\",\r\n    cost: 5,\r\n    grade: 2,\r\n    atk: 330,\r\n    atkType: \"magic\",\r\n    modLv: \"E\",\r\n    modType: \"str\",\r\n    fire: {\r\n      atk: 480,\r\n      time: 4\r\n    }\r\n  },\r\n  {\r\n    name: \"海魔獸歷史\",\r\n    cost: 4,\r\n    grade: 3,\r\n    atk: 100,\r\n    atkType: \"heal\",\r\n    modLv: \"E\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"火焰之加護\",\r\n    cost: 4,\r\n    grade: 4,\r\n    atk: 20,\r\n    atkType: \"heal\",\r\n    modLv: \"D\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"神怒之書\",\r\n    cost: 4,\r\n    grade: 3,\r\n    buff: [{bonus: 35, times: 1}]\r\n  },\r\n  {\r\n    name: \"刨冰食用指南\",\r\n    cost: 4,\r\n    grade: 4,\r\n    water: {\r\n      modLv: \"C\",\r\n      modType: \"int\",\r\n      time: 2\r\n    }\r\n  },\r\n  {\r\n    name: \"深紅的日記\",\r\n    cost: 5,\r\n    grade: 3,\r\n    atk: 250,\r\n    atkType: \"magic\",\r\n    modLv: \"E\",\r\n    modType: \"str\",\r\n    // fire: {\r\n    //   FIXME: find the correct mod\r\n    //   modLv: \"?\"\r\n    // }\r\n  },\r\n  {\r\n    name: \"生命滿溢\",\r\n    cost: 5 - 2,\r\n    grade: 4,\r\n    atk: 300,\r\n    atkType: \"heal\",\r\n    modLv: \"C\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"聖火護盾\",\r\n    cost: 7,\r\n    grade: 4,\r\n    atk: 82,\r\n    atkType: \"heal\",\r\n    modLv: \"B\",\r\n    modType: \"int\",\r\n  },\r\n  {\r\n    name: \"結晶智慧\",\r\n    cost: 4,\r\n    grade: 2,\r\n    buff: [{int: 400, times: 99}]\r\n  },\r\n];\r\n\r\nexport default weapons;\r\n\r\nexport const buff = weapons.filter(w => w.buff && (!w.modLv && !w.atk));\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","selectedIndex","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","field","dir","button","method","match","location","pathname","currentPage","li0","page","li1","li2","li3","ul","subscriber_queue","key","cache","getStore","default_","get","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","writable","JSON","parse","parseJSON","localStorage","getItem","setItem","stringify","passive","afterHit","state","buff","atk","times","totalHit","bonus","afterWeapon","hit","poison","turn","weapon","fire","cost","targetBuff","every","goriya","injuryBonus","fireResist","water","damage","getDef","atkType","beforeWeapon","casting","WEAPON_MOD","F","E0","E","D","C","B","A","S","SS","SSS","State","constructor","def","int","mdef","waterResist","poisonResist","lightningResist","poisonTurns","stance","lightning","getFireResist","reduce","output","getInjuryBonus","getWaterAtk","modLv","modType","getAtk","simulate","weapons","passiveIds","allPassive","includes","stages","result","calculateDamage","finalDamage","s","finalCost","summary","cp","weaponAtk","charAtk","getPoisonDamage","Math","min","calculatePassive","oldPoisonDamage","currentHit","use","max","trap","time","newBonus","gain","t1_value","label","span","create_if_block","if_block","t_value","t","toFixed","t5_value","select_change_handler","span0","span1","span2","div","button0","button1","button2","button3","t1","t3","t3_value","t5","t0_value","t2_value","t4_value","t6_value","span3","t0","t2","t4","t6","t47_value","t49_value","h1","div0","input0","input1","input2","input3","span4","input4","span5","input5","span6","input6","span7","input7","span8","input8","h20","div1","span9","span10","span11","span12","span13","span14","span15","span16","span17","h21","div2","span18","footer","t45","t45_value","current","t47","t49","storeKey","NAME_TO_WEAPON","fromEntries","w","compareList","sortMethod","combos","calcedCompareList","sortedCompareList","addCombo","deleteCombo","moveCombo","deleteCompare","$compareList","$atk","$def","$int","$mdef","$poisonTurns","$passiveIds","$fireResist","$waterResist","$poisonResist","$lightningResist","$$invalidate","names","n","join","slice","$sortMethod","sort","group","checked","get_binding_group_value","$$binding_groups","selected_option","querySelector","row","grade"],"mappings":"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"}