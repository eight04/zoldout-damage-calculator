{"version":3,"file":"tome-c1501cf4.js","sources":["../node_modules/svelte/internal/index.mjs","../src/lib/SortButton.svelte","../src/lib/env.mjs","../src/lib/Nav.svelte","../node_modules/svelte/store/index.mjs","../src/lib/store.mjs","../src/lib/passive.mjs","../src/lib/simulator.mjs","../src/lib/enemy.mjs","../src/lib/App.svelte","../src/weapons/tome.mjs"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.50.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\nexport let method, field, text;\n\nfunction sort() {\n  if (method.field !== field) {\n    method.field = field;\n    method.dir = 1;\n  } else {\n    method.dir *= -1;\n  }\n}\n</script>\n<button\n  class:sorted={method.field === field}\n  class:reversed={method.dir < 0}\n  on:click={sort}>{text}</button>\n\n\n<style>\n.sorted::after {\n  content: \"↓\";\n}\n.sorted.reversed::after {\n  content: \"↑\";\n}\n</style>\n","/* eslint-env browser */\nconst match = location.pathname.match(/([^/.]*)(\\.html)?$/);\nexport const currentPage = !match[1] || match[1] === \"index\" ? \"sword\" : match[1];\n","<script>\nimport {currentPage as page} from \"./env.mjs\";\n</script>\n\n<ul>\n  <li class:active={page === \"sword\"}><a href=\".\">劍</a></li>\n  <li class:active={page === \"bow\"}><a href=\"bow.html\">弓</a></li>\n  <li class:active={page === \"wand\"}><a href=\"wand.html\">杖</a></li>\n  <li class:active={page === \"tome\"}><a href=\"tome.html\">書</a></li>\n</ul>\n\n<style>\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  gap: .2em;\n}\na {\n  display: block;\n  padding: .4em .8em;\n}\n.active a {\n  background: #eee;\n}\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/* eslint-env browser */\n\nimport {writable} from \"svelte/store\";\n\nconst key = \"zoldout-damage-calculator\";\nconst cache = new Map;\n\nexport function getStore(name, default_) {\n  if (cache.has(name)) return cache.get(name);\n  \n  const store = writable(\n    parseJSON(localStorage.getItem(`${key}/${name}`)) ??\n    default_\n  );\n  store.subscribe(value => \n    localStorage.setItem(`${key}/${name}`, JSON.stringify(value))\n  );\n  \n  cache.set(name, store);\n  return store;\n}\n\nfunction parseJSON(text) {\n  try {\n    return JSON.parse(text);\n  } catch {\n    // pass\n  }\n}\n","export default [\n  {\n    name: \"攻擊力增加（維羅尼卡）\",\n    type: \"sword\",\n    beforeAll: state => {\n      state.buff.push({bonus: 20, times: 99});\n    }\n  },\n  {\n    name: \"攻擊力增加（夏洛蒂）\",\n    type: \"sword\",\n    beforeAll: state => {\n      state.buff.push({bonus: 45, times: 99});\n    }\n  },\n  {\n    name: \"傷害後攻擊增加（艾莉諾拉）\",\n    type: \"bow\",\n    afterHit: state => {\n      state.buff.push({bonus: 5, times: 99});\n    }\n  },\n  {\n    name: \"第2+次傷害攻擊機率增加（艾莉諾拉）\",\n    type: \"bow\",\n    afterHit: state => {\n      if (state.totalHit === 1) {\n        state.buff.push({bonus: 0.3 * 70 + 0.7 * 0, times: 99});\n      }\n    }\n  },\n  {\n    name: \"使用武器後中毒（格蕾絲）\",\n    type: \"bow\",\n    afterWeapon: (state, weapon) => {\n      if (state.hit && !weapon.name.includes(\"奧義\")) {\n        state.poison.push({\n          atk: 300,\n          turn: 2,\n          bonus: 0\n        });\n      }\n    }\n  },\n  {\n    name: \"製造虛影（菲恩）\",\n    type: \"bow\",\n    beforeAll: state => {\n      state.moves = 0;\n      state.isShadow = false;\n    },\n    afterWeapon: (state, weapon) => {\n      if (weapon.name === \"移動\") {\n        state.moves++;\n        return;\n      }\n      if (state.isShadow) return;\n\n      let {atk, buff, cost, damage} = state;\n      state.isShadow = true;\n      state.atk = 1047;\n      state.buff = [];\n      for (let i = 0; i < state.moves; i++) {\n        // FIXME: does shadow share the same total hit with fein?\n        // FIXME: doesn't work with stance\n        state.processWeapon(weapon);\n        damage += state.damage;\n      }\n      state.atk = atk;\n      state.buff = buff;\n      state.cost = cost;\n      state.isShadow = false;\n      state.damage = damage;\n    }\n  },\n  {\n    name: \"傷害後點燃或額外傷害（艾娜）\",\n    type: \"bow\",\n    afterHit: (state) => {\n      if (state.fire) {\n        state.damage += 360 * state.getFireResist();\n      } else {\n        state.fire = true;\n        state.damage += 540 * state.getFireResist();\n      }\n    }\n  },\n  {\n    name: \"使用火武器後加速（歌莉雅）\",\n    type: \"wand\",\n    afterWeapon: (state, weapon) => {\n      if (weapon.fire?.atk) {\n        state.cost -= 2;\n      }\n    }\n  },\n  {\n    name: \"著火時增傷、減抗（歌莉雅）\",\n    type: \"buff\",\n    beforeHit: (state) => {\n      let b = state.targetBuff.find(b => b.id === \"goriya1\");\n      if (!b) {\n        b = {\n          id: \"goriya1\",\n          times: 99,\n        };\n        state.targetBuff.push(b);\n      }\n      b.injuryBonus = state.fire ? 10 : 0;\n      b.fireResist = state.fire ? -10 : 0;\n    }\n  },\n  {\n    name: \"大範圍武器加速、攻擊增加（聖樹梅米）\",\n    type: \"wand\",\n    beforeWeapon: (state, weapon) => {\n      if (weapon.range === \"large\") {\n        state.cost -= 1;\n        if (state.hit) {\n          state.buff.push({bonus: 10, times: 1});\n        }\n      }\n    }\n  },\n  {\n    name: \"額外傷害（尤里+泳裝伊蓮）\",\n    type: \"wand\",\n    afterWeapon: (state, weapon) => {\n      if (weapon.water) {\n        state.damage += (900 - state.getDef({atkType: \"magic\"})) * 2;\n      }\n    }\n  },\n  {\n    name: \"魔攻增加（西比拉）\",\n    type: \"wand\",\n    beforeWeapon: (state, weapon) => {\n      if (weapon.casting >= 6 && state.hit) {\n        state.buff.push({bonus: 25, times: 1});\n      }\n    }\n  },\n  {\n    name: \"生命回復（塔尼亞）\",\n    type: \"tome\",\n    afterWeapon: (state, weapon) => {\n      if (!state.hit || weapon.atkType === \"heal\") {\n        state.damage += 360;\n      }\n    }\n  },\n  {\n    name: \"加速（塔尼亞）\",\n    type: \"tome\",\n    afterWeapon: (state, weapon) => {\n      if (!state.hit && weapon.buff || weapon.atkType === \"heal\") {\n        state.cost--;\n      }\n    }\n  }\n];\n","import allPassive from \"./passive.mjs\";\n\n// NOTE: we use F++ instead of F\nconst WEAPON_MOD = {\n  F: 0.85,\n  E: 1.1,\n  D: 1.35,\n  C: 1.6,\n  B: 1.85,\n  A: 2.1,\n  S: 2.35,\n  SS: 2.6,\n  SSS: 2.85,\n  Ex: 3.1\n};\nfor (const key in WEAPON_MOD) {\n  WEAPON_MOD[`${key}0`] = WEAPON_MOD[key] - 0.1;\n}\n\nfunction getWeaponMod(lv) {\n  if (typeof lv === \"number\") return lv;\n  if (WEAPON_MOD[lv]) return WEAPON_MOD[lv];\n  throw new Error(`unknown modLv: ${lv}`);\n}\n\nclass State {\n  constructor({\n    hp,\n    atk, def, int, mdef,\n    fireResist, waterResist, poisonResist, lightningResist,\n    fire = false, freeze = false, poison = false,\n    poisonTurns, stance = 0, maxTargets = 1,\n    passive\n  }) {\n    this.hp = hp;\n    this.atk = atk;\n    this.def = def;\n    this.int = int;\n    this.mdef = mdef;\n\n    this.fireResist = fireResist;\n    this.waterResist = waterResist;\n    this.poisonResist = poisonResist;\n    this.lightningResist = lightningResist;\n\n    this.poisonTurns = poisonTurns;\n    this.maxTargets = maxTargets;\n    this.passive = passive;\n\n    this.damage = 0;\n    this.hit = 0;\n    this.totalHit = 0;\n    this.stance = stance;\n    this.totalHit = 0;\n    this.buff = [];\n    this.targetBuff = [];\n    this.targets = 0;\n\n    this.poison = poison ? [{atk: 0, turn: 99}] : [];\n    this.lightning = {};\n    this.fire = fire;\n    this.freeze = freeze;\n  }\n  clone(extra = {}) {\n    const s = new State({});\n    Object.assign(s, this, extra);\n    return s;\n  }\n  getDef(weapon) {\n    return getDef(this, weapon);\n  }\n  getResist(key) {\n    const value = this[key] + this.targetBuff.reduce((output, b) => output + (b[key] || 0), 0);\n    return (100 - value) / 100;\n  }\n  getFireResist() {\n    return this.getResist(\"fireResist\");\n  }\n  getWaterResist() {\n    return this.getResist(\"waterResist\");\n  }\n  getPoisonResist() {\n    return this.getResist(\"poisonResist\");\n  }\n  getLightningResist() {\n    return this.getResist(\"lightningResist\");\n  }\n  getInjuryBonus() {\n    const bonus = this.targetBuff.reduce((output, b) => output + (b.injuryBonus || 0), 0);\n    return (bonus + 100) / 100;\n  }\n  getWaterAtk(water) {\n    return getAtk(this, water);\n  }\n  getFireAtk(options) {\n    return getAtk(this, options);\n  }\n  getLightningAtk(options) {\n    return getAtk(this, options);\n  }\n  getPoisonAtk(options) {\n    return getAtk(this, options);\n  }\n  processWeapon(weapon) {\n    return processWeapon(this, weapon);\n  }\n}\n\nexport function simulate({\n  weapons, passiveIds, ...options\n}) {\n  const passive = allPassive.filter((p, i) => passiveIds.includes(i));\n  const stages = [];\n  const state = new State({...options, passive});\n  calculatePassive(state, null, \"beforeAll\");\n  for (const weapon of weapons) {\n    const result = calculateDamage(state, weapon);\n    stages.push(result);\n  }\n  const finalDamage = stages.reduce((o, s) => o + s.damage, 0);\n  const finalCost = stages.reduce((o, s) => o + s.cost, 0);\n  const executeCost = Math.ceil(state.hp / finalDamage) * finalCost;\n  return {\n    stages,\n    summary: {\n      damage: finalDamage,\n      cost: finalCost,\n      executeCost,\n      cp: finalDamage / finalCost\n    }\n  };\n}\n\nfunction getDef({def, mdef, targetBuff: buff}, {atkType}) {\n  if (atkType === \"heal\") return 0;\n  if (atkType === \"water\" || atkType === \"fire\" || atkType === \"poison\" || atkType === \"lightning\") {\n    return 0;\n  }\n  if (atkType === \"magic\") {\n    return Math.max(mdef + buff.reduce((output, b) => output + (b.mdef || 0), 0), 0);\n  }\n  return Math.max(def + buff.reduce((output, b) => output + (b.def || 0), 0), 0);\n}\n\nfunction getResist(state, {atkType}) {\n  if (atkType === \"fire\") {\n    return state.getFireResist();\n  }\n  if (atkType === \"water\") {\n    return state.getWaterResist();\n  }\n  if (atkType === \"poison\") {\n    return state.getPoisonResist();\n  }\n  if (atkType === \"lightning\") {\n    return state.getLightningResist();\n  }\n  return 1;\n}\n\nfunction getAtk({atk, int, buff}, {modType, modLv, atk: weaponAtk = 0, bonus = 0}) {\n  const charAtk = modType === \"int\" ?\n    int + buff.reduce((output, b) => output + (b.int || 0), 0) :\n    atk + buff.reduce((output, b) => output + (b.atk || 0), 0);\n  return (weaponAtk + (modLv ? charAtk * getWeaponMod(modLv) : 0))\n    * (bonus + 100) / 100;\n}\n\nfunction getPoisonDamage({poison, poisonTurns, poisonResist}) {\n  let damage = 0;\n  for (const p of poison) {\n    if (!p.atk) continue;\n    damage += p.atk * Math.min(p.turn, poisonTurns) / p.turn * (100 - poisonResist) / 100;\n  }\n  return damage;\n}\n\nfunction calculatePassive(state, weapon, key) {\n  state.passive.forEach(p => p[key]?.(state, weapon));\n  weapon?.[key]?.(state, weapon);\n}\n\nfunction processWeapon(state, weapon) {\n  state.cost = weapon.casting || weapon.cost;\n  state.hit = weapon.hit || (weapon.atk || weapon.modLv ? 1 : 0);\n  state.damage = 0;\n  state.targets = Math.min(state.maxTargets, weapon.targets || 1);\n  const def = getDef(state, weapon);\n  const resist = getResist(state, weapon);\n  calculatePassive(state, weapon, \"beforeWeapon\");\n  for (let i = 0; i < state.hit; i++) {\n    calculatePassive(state, weapon, \"beforeHit\");\n    state.currentHit = i + 1;\n    state.totalHit++;\n    let atk = getAtk(state, weapon);\n    atk *= state.buff.reduce((output, b) => output * (b.bonus ? (b.bonus + 100) / 100 : 1), 1);\n    if (weapon.stance?.use === state.stance) {\n      atk *= ((weapon.stance.bonus || 0) + 100) / 100;\n    }\n    state.damage += Math.max(atk - def, 1) * resist * state.getInjuryBonus() * state.targets;\n    if (state.lightning?.atk) {\n      state.damage += state.lightning.atk * (100 - state.lightningResist) / 100 * state.targets;\n    }\n    calculatePassive(state, weapon, \"afterHit\");\n  }\n\n  if (state.hit) {\n    state.buff = state.buff.map(b => ({...b, times: b.times - 1})).filter(b => b.times > 0);\n    state.targetBuff = state.targetBuff.map(b => ({...b, times: b.times - 1})).filter(b => b.times > 0);\n  }\n\n  if (weapon.trap) {\n    const trapState = state.clone({passive: [], buff: []});\n    trapState.processWeapon(weapon.trap);\n    state.damage += trapState.damage;\n  }\n\n  if (weapon.fire && (!weapon.fire.cond || weapon.fire.cond(state))) {\n    state.damage += state.getFireAtk(weapon.fire) * state.getFireResist() * state.targets;\n    if (weapon.fire.time) {\n      state.fire = true;\n    }\n  }\n\n  if (weapon.water && (!weapon.water.cond || weapon.water.cond(state))) {\n    state.damage += state.getWaterAtk(weapon.water) * (100 - state.waterResist) / 100 * state.targets;\n    if (weapon.water.time) {\n      state.freeze = true;\n    }\n  }\n\n  if (weapon.lightning && (!weapon.lightning.cond || weapon.lightning.cond(state))) {\n    const atk = state.getLightningAtk(weapon.lightning);\n    state.damage += atk * (100 - state.lightningResist) / 100 * state.targets;\n    if (!state.lightning.atk || weapon.lightning.time > state.lightning.time) {\n      state.lightning.atk = atk;\n      state.lightning.time = weapon.lightning.time;\n    }\n  }\n\n  if (weapon.poison && (!weapon.poison.cond || weapon.poison.cond(state))) {\n    // FIXME: this goes wrong when multiple targets get poisoned and get hit by a single target weapon with poison bonus\n    for (let i = 0; i < state.targets; i++) {\n      state.poison.push({\n        atk: state.getPoisonAtk(weapon.poison),\n        turn: weapon.poison.turn,\n        bonus: 0\n      });\n    }\n    if (weapon.poison.bonus) {\n      state.poison = state.poison.map(p => {\n        const newBonus = (p.bonus + 100) * (weapon.poison.bonus + 100) / 100 - 100;\n        return {...p, bonus: Math.min(newBonus, 200)};\n      });\n    }\n  }\n\n  if (weapon.buff) {\n    addBuff(state.buff, weapon.buff);\n  }\n  if (weapon.targetBuff) {\n    addBuff(state.targetBuff, weapon.targetBuff);\n  }\n\n  if (weapon.stance?.use === state.stance && weapon.stance.buff) {\n    addBuff(state.buff, weapon.stance.buff);\n  }\n\n  if (weapon.stance?.gain != null) {\n    state.stance = weapon.stance.gain;\n  }\n\n  calculatePassive(state, weapon, \"afterWeapon\");\n}\n\nfunction addBuff(buffs, newBuffs) {\n  const ids = new Map(buffs.map((b, i) => [b.id, i]));\n  for (const b of newBuffs) {\n    if (b.id && ids.has(b.id)) {\n      buffs[ids.get(b.id)] = b;\n    } else {\n      buffs.push(b);\n    }\n  }\n}\n\nfunction calculateDamage(state, weapon) {\n  const oldPoisonDamage = getPoisonDamage(state);\n  processWeapon(state, weapon);\n  state.damage += getPoisonDamage(state) - oldPoisonDamage;\n  return {damage: state.damage, cost: state.cost};\n}\n","export default [\n  {\n    name: \"星光帝王蟹\",\n    def: 999999,\n    mdef: 999999,\n    fireResist: -100,\n    waterResist: 99,\n    poisonResist: 99,\n    lightningResist: -100\n  }\n];\n\n","<script>\nimport SortButton from \"./SortButton.svelte\";\nimport Nav from \"./Nav.svelte\";\n\nimport {currentPage} from \"./env.mjs\";\nimport {getStore} from \"./store.mjs\";\nimport {simulate} from \"./simulator.mjs\";\nimport passive from \"./passive.mjs\";\nimport enemy from \"./enemy.mjs\";\n\nexport let weapons, storeKey;\n\nweapons.unshift({\n  name: \"移動\",\n  cost: currentPage === \"sword\" ? 1 : 2\n});\n\nconst NAME_TO_WEAPON = Object.fromEntries(weapons.map(w => [w.name, w]));\n\nconst atk = getStore(`${storeKey}/atk`, 700);\nconst def = getStore(`comm/def`, 200);\nconst int = getStore(`${storeKey}/int`, 700);\nconst mdef = getStore(`comm/mdef`, 200);\nconst hp = getStore(`comm/hp`, 2736);\n\nconst fireResist = getStore(`comm/fireResist`, 0);\nconst waterResist = getStore(`comm/waterResist`, 0);\nconst poisonResist = getStore(`comm/poisonResist`, 0);\nconst lightningResist = getStore(`comm/lightningResist`, 0);\n\nconst fire = getStore(`comm/fire`, false);\nconst freeze = getStore(`comm/freeze`, false);\nconst poison = getStore(`comm/poison`, false);\nconst lightning = getStore(`comm/lightning`, false);\n\nconst poisonTurns = getStore(`${storeKey}/poisonTurns`, 99);\nconst stance = getStore(`${storeKey}/stance`, 0);\n\nconst passiveIds = getStore(`${storeKey}/passiveIds`, []);\n\nconst compareList = getStore(`${storeKey}/compareList`, []);\nconst sortMethod = getStore(`${storeKey}/sortMethod`, {\n  field: null,\n  dir: 1\n});\n\nlet choosedEnemy;\n\nlet combos = [weapons[0]];\nlet result = {\n  stages: [],\n  summary: {\n    damage: 0,\n    cost: 0,\n    cp: 0\n  }\n};\nlet calcedCompareList = [];\nlet sortedCompareList = [];\nlet options = {};\n\n$: {\n  options = {\n    hp: $hp,\n    atk: $atk,\n    def: $def,\n    int: $int,\n    mdef: $mdef,\n\n    fire: $fire,\n    freeze: $freeze,\n    poison: $poison,\n    lightning: $lightning,\n\n    poisonTurns: $poisonTurns,\n    stance: $stance,\n\n    passiveIds: $passiveIds,\n\n    fireResist: $fireResist,\n    waterResist: $waterResist,\n    poisonResist: $poisonResist,\n    lightningResist: $lightningResist\n  };\n}\n\n$: {\n  result = simulate({\n    ...options,\n    weapons: combos,\n  });\n}\n\n$: {\n  calcedCompareList = $compareList.map((names, i) => {\n    const weapons = names.map(n => NAME_TO_WEAPON[n]);\n    const result = simulate({\n      ...options,\n      weapons,\n    });\n    return {\n      name: names.join(\"+\"),\n      index: i,\n      ...result.summary\n    };\n  });\n}\n\n$: {\n  sortedCompareList = calcedCompareList.slice();\n  if ($sortMethod.field) {\n    sortedCompareList.sort((a, b) => {\n      let result = a[$sortMethod.field] < b[$sortMethod.field] ? -1 :\n        a[$sortMethod.field] > b[$sortMethod.field] ? 1 : 0;\n      return result * $sortMethod.dir;\n    });\n  }\n}\n\nfunction loadChoosedEnemy() {\n  $hp = choosedEnemy.hp || 0;\n  $def = choosedEnemy.def || 0;\n  $mdef = choosedEnemy.mdef || 0;\n  $fireResist = choosedEnemy.fireResist || 0;\n  $waterResist = choosedEnemy.waterResist || 0;\n  $poisonResist = choosedEnemy.poisonResist || 0;\n  $lightningResist = choosedEnemy.lightningResist || 0;\n}\n\nfunction addCombo(i) {\n  combos.splice(i, 0, combos[i]);\n  combos = combos;\n}\n\nfunction deleteCombo(i) {\n  if (combos.length <= 1) return;\n  combos.splice(i, 1);\n  combos = combos;\n}\n\nfunction moveCombo(i, dir) {\n  const t = combos[i];\n  combos.splice(i, 1);\n  combos.splice(i + dir, 0, t);\n  combos = combos;\n}\n\nfunction addToCompare() {\n  $compareList.push(combos.map(w => w.name));\n  $compareList = $compareList;\n}\n\nfunction deleteCompare(i) {\n  $compareList.splice(i, 1);\n  $compareList = $compareList;\n}\n\nfunction addAllToCompare() {\n  const set = new Set($compareList.map(c => c[0]));\n  for (const weapon of weapons) {\n    if (!set.has(weapon.name)) {\n      $compareList.push([weapon.name]);\n    }\n  }\n  $compareList = $compareList;\n}\n</script>\n\n<h1>Zold:Out Damage Calculator</h1>\n\n<Nav />\n\n<div class=\"enemy-preset\">\n  <span>載入預設敵人</span>\n  <select bind:value={choosedEnemy}>\n    {#each enemy as e}\n      <option value={e}>{e.name}</option>\n    {/each}\n  </select>\n  <button on:click={loadChoosedEnemy}>Apply</button>\n</div>\n\n<div class=\"base-info\">\n  <span>血量</span>\n  <input type=\"number\" bind:value={$hp} class=\"cspan3\">\n  <span>力量</span>\n  <input type=\"number\" bind:value={$atk}>\n  <span>防禦</span>\n  <input type=\"number\" bind:value={$def}>\n  <span>智力</span>\n  <input type=\"number\" bind:value={$int}>\n  <span>魔防</span>\n  <input type=\"number\" bind:value={$mdef}>\n  <span>火抗</span>\n  <input type=\"number\" bind:value={$fireResist}>\n  <span>水抗</span>\n  <input type=\"number\" bind:value={$waterResist}>\n  <span>毒抗</span>\n  <input type=\"number\" bind:value={$poisonResist}>\n  <span>雷抗</span>\n  <input type=\"number\" bind:value={$lightningResist}>\n  <label class=\"cspan\">\n    <input type=\"checkbox\" bind:checked={$freeze}>\n    <span>敵人凍結</span>\n  </label>\n  <label class=\"cspan\">\n    <input type=\"checkbox\" bind:checked={$fire}>\n    <span>敵人著火</span>\n  </label>\n  <label class=\"cspan\">\n    <input type=\"checkbox\" bind:checked={$poison}>\n    <span>敵人中毒</span>\n  </label>\n  <label class=\"cspan\">\n    <input type=\"checkbox\" bind:checked={$lightning}>\n    <span>敵人觸電</span>\n  </label>\n  <span>中毒發生次數</span>\n  <input type=\"number\" bind:value={$poisonTurns}>\n  <span>當前架勢</span>\n  <input type=\"number\" bind:value={$stance}>\n  {#each passive as p, i}\n    {#if currentPage === p.type || p.type === \"buff\"}\n      <label class=\"cspan\">\n        <input type=\"checkbox\" bind:group={$passiveIds} value={i}>\n        <span>{p.name}</span>\n      </label>\n    {/if}\n  {/each}\n</div>\n\n<h2>Combo</h2>\n\n<div class=\"combo-table\">\n  <span class=\"chead\">Weapon</span>\n  <span class=\"chead\">Cost</span>\n  <span class=\"chead\">Damage</span>\n  <span class=\"chead\">CP</span>\n  <span class=\"operation\"></span>\n  {#each combos as weapon, i}\n    <select bind:value={weapon}>\n      {#each weapons as w}\n        <option value={w}>{w.name}</option>\n      {/each}\n    </select>\n    <span>\n      {result.stages[i]?.cost}\n    </span>\n    <span>\n      {result.stages[i]?.damage.toFixed(0)}\n    </span>\n    <span>\n      {((result.stages[i]?.damage || 0) / result.stages[i]?.cost).toFixed(0)}\n    </span>\n    <div class=\"operation\">\n      <button on:click={() => moveCombo(i, -1)}>&uarr;</button>\n      <button on:click={() => moveCombo(i, 1)}>&darr;</button>\n      <button on:click={() => addCombo(i)}>&#x2398;</button>\n      <button on:click={() => deleteCombo(i)}>x</button>\n    </div>\n  {/each}\n  <span class=\"chead\">Summary</span>\n  <span>{result.summary.cost}</span>\n  <span>{result.summary.damage.toFixed(0)}</span>\n  <span>{result.summary.cp.toFixed(0)}</span>\n</div>\n\n<button on:click={addToCompare}>Add to compare list</button>\n\n<h2>Compare</h2>\n\n<button on:click={addAllToCompare}>Add all weapons</button>\n<div class=\"compare-list\">\n  <SortButton field=\"name\" text=\"Name\" bind:method={$sortMethod} />\n  <SortButton field=\"cost\" text=\"Cost\" bind:method={$sortMethod} />\n  <SortButton field=\"damage\" text=\"Damage\" bind:method={$sortMethod} />\n  <SortButton field=\"cp\" text=\"CP\" bind:method={$sortMethod} />\n  <SortButton field=\"executeCost\" text=\"斬殺Cost\" bind:method={$sortMethod} />\n  <span></span>\n  {#each sortedCompareList as row}\n    <span>{row.name}</span>\n    <span>{row.cost}</span>\n    <span>{row.damage.toFixed(0)}</span>\n    <span>{row.cp.toFixed(0)}</span>\n    <span>{row.executeCost}</span>\n    <button on:click={() => deleteCompare(row.index)}>x</button>\n  {/each}\n</div>\n\n<footer>\n  <a href=\"https://github.com/eight04/zoldout-damage-calculator\">zoldout-damage-calculator</a>\n</footer>\n\n<style>\n:global(body) {\n  font-size: 16px;\n  font-family: sans-serif;\n  margin: 2em auto;\n  max-width: 600px;\n  padding: 0 .6em;\n}\n:global(input), :global(button), :global(select) {\n  font-size: .95em;\n  font-family: inherit;\n  padding: .3em .6em;\n  vertical-align: middle;\n}\n:global(input[type=number]) {\n  width: 100%;\n  box-sizing: border-box;\n}\n.enemy-preset {\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  align-items: center;\n  gap: 1em;\n  margin: 1em 0;\n}\n.base-info {\n  display: grid;\n  grid-template-columns: max-content 1fr max-content 1fr;\n  align-items: center;\n  gap: 1em;\n  margin: 1em 0;\n}\n.combo-table {\n  width: fit-content;\n  display: grid;\n  grid-template-columns: repeat(5, auto);\n  align-items: center;\n  gap: .2em;\n  margin: 1em 0;\n}\n@media (max-width: 600px) {\n  .combo-table {\n    grid-template-columns: repeat(4, auto);\n  }\n  .operation {\n    grid-column-end: span 4;\n  }\n}\n.combo-table > * {\n  padding: .3em .6em;\n}\n.chead {\n  background: #eee;\n  font-weight: bold;\n}\n.cspan {\n  grid-column-end: span 2;\n}\n.cspan3 {\n  grid-column-end: span 3;\n}\n.compare-list {\n  width: fit-content;\n  display: grid;\n  grid-template-columns: repeat(6, auto);\n  align-items: center;\n  gap: .2em;\n  margin: 1em 0;\n}\n.compare-list > * {\n  padding: .3em .6em;\n}\nfooter {\n  text-align: center;\n  margin: 1.2em;\n}\n</style>\n","const weapons = [\n  {\n    name: \"閃耀之書\",\n    cost: 4,\n    grade: 1,\n    atk: 230,\n    atkType: \"magic\",\n    modLv: \"E\",\n    modType: \"str\",\n  },\n  {\n    name: \"憤怒之書\",\n    cost: 2,\n    grade: 1,\n    buff: [{bonus: 15, times: 1}]\n  },\n  {\n    name: \"大回復之書\",\n    cost: 7,\n    grade: 1,\n    atk: 180,\n    atkType: \"heal\",\n    modLv: \"D\",\n    modType: \"int\"\n  },\n  {\n    name: \"淨化之書\",\n    cost: 3,\n    grade: 1,\n    atk: 30,\n    atkType: \"heal\",\n    modLv: \"F\",\n    modType: \"int\"\n  },\n  {\n    name: \"燃燒之書\",\n    cost: 4,\n    grade: 1,\n    atk: 150,\n    atkType: \"magic\",\n    modLv: \"F\",\n    modType: \"str\",\n    fire: {\n      atk: 220,\n      time: 4\n    }\n  },\n  {\n    name: \"加速之書\",\n    cost: 4 - 1,\n    grade: 1,\n    atk: 110,\n    atkType: \"heal\",\n    modLv: \"F\",\n    modType: \"int\",\n  },\n  {\n    name: \"快速回復之書\",\n    cost: 4,\n    grade: 2,\n    atk: 200,\n    atkType: \"heal\",\n    modLv: \"D\",\n    modType: \"int\",\n  },\n  {\n    name: \"觸電之書\",\n    cost: 3,\n    grade: 1,\n    atk: 50,\n    atkType: \"magic\",\n    modLv: \"E\",\n    modType: \"str\",\n    lightning: {\n      atk: 50,\n      time: 6\n    }\n  },\n  {\n    name: \"聖光之書\",\n    cost: 4,\n    grade: 2,\n    atk: 230,\n    atkType: \"magic\",\n    modLv: \"D\",\n    modType: \"str\",\n  },\n  {\n    name: \"智慧之書\",\n    cost: 4,\n    grade: 2,\n    buff: [{int: 200, times: 99}]\n  },\n  {\n    name: \"高階回復之書\",\n    cost: 7,\n    grade: 2,\n    atk: 100,\n    atkType: \"heal\",\n    modLv: \"C\",\n    modType: \"int\",\n  },\n  {\n    name: \"自由火蝶\",\n    cost: 4,\n    grade: 4,\n    fire: {\n      atk: 720,\n      time: 4\n    }\n  },\n  {\n    name: \"清淨如水\",\n    cost: 6,\n    grade: 3,\n    atk: 155,\n    atkType: \"heal\",\n    modLv: \"F\",\n    modType: \"int\",\n    targets: 99\n  },\n  {\n    name: \"雷電蜂\",\n    cost: 4,\n    grade: 3,\n    atk: 100,\n    atkType: \"magic\",\n    modLv: \"D\",\n    modType: \"str\",\n    lightning: {\n      atk: 145,\n      time: 10\n    }\n  },\n  {\n    name: \"猛炎之書\",\n    cost: 5,\n    grade: 2,\n    atk: 330,\n    atkType: \"magic\",\n    modLv: \"E\",\n    modType: \"str\",\n    fire: {\n      atk: 480,\n      time: 4\n    }\n  },\n  {\n    name: \"海魔獸歷史\",\n    cost: 4,\n    grade: 3,\n    atk: 100,\n    atkType: \"heal\",\n    modLv: \"E\",\n    modType: \"int\",\n  },\n  {\n    name: \"火焰之加護\",\n    cost: 4,\n    grade: 4,\n    atk: 20,\n    atkType: \"heal\",\n    modLv: \"D\",\n    modType: \"int\",\n  },\n  {\n    name: \"聖樹祭慶祝指南\",\n    cost: 5,\n    grade: 3,\n    atk: 50,\n    atkType: \"heal\",\n    modLv: \"C\",\n    modType: \"int\",\n    buff: [{def: 250, times: 99}]\n  },\n  {\n    name: \"夏洛蒂自傳\",\n    cost: 5,\n    grade: 3,\n    atk: 350,\n    atkType: \"magic\",\n    modLv: \"C\",\n    modType: \"str\"\n  },\n  {\n    name: \"神怒之書\",\n    cost: 4,\n    grade: 3,\n    buff: [{bonus: 35, times: 1}]\n  },\n  {\n    name: \"航海指南\",\n    cost: 4,\n    atk: 220,\n    atkType: \"heal\",\n    modLv: \"C\",\n    modType: \"int\"\n  },\n  {\n    name: \"刨冰食用指南\",\n    cost: 4,\n    grade: 4,\n    water: {\n      modLv: \"C\",\n      modType: \"int\",\n      time: 2\n    }\n  },\n  {\n    name: \"深紅的日記\",\n    cost: 5,\n    grade: 3,\n    atk: 250,\n    atkType: \"magic\",\n    modLv: \"E\",\n    modType: \"str\",\n    fire: {\n      modLv: 1.31,\n      modType: \"int\",\n      time: 5\n    }\n  },\n  {\n    name: \"眾神之怒\",\n    cost: 3,\n    grade: 4,\n    buff: [{bonus: 30, times: 1}]\n  },\n  {\n    name: \"生命滿溢\",\n    cost: 5 - 2,\n    grade: 4,\n    atk: 300,\n    atkType: \"heal\",\n    modLv: \"C\",\n    modType: \"int\",\n  },\n  {\n    name: \"聖火護盾\",\n    cost: 7,\n    grade: 4,\n    atk: 82,\n    atkType: \"heal\",\n    modLv: \"B\",\n    modType: \"int\",\n  },\n  {\n    name: \"結晶智慧\",\n    cost: 4,\n    grade: 2,\n    buff: [{int: 400, times: 99}]\n  },\n  {\n    name: \"腥紅海鯊後援團守則\",\n    cost: 7,\n    grade: 4,\n    atk: 280,\n    atkType: \"heal\",\n    modLv: \"C\",\n    modType: \"int\",\n    targets: 99\n  }\n];\n\nexport default weapons;\n\nexport const buff = weapons.filter(w => w.buff && (!w.modLv && !w.atk));\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","field","dir","button","method","match","location","pathname","currentPage","li0","page","li1","li2","li3","ul","subscriber_queue","key","cache","getStore","default_","get","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","writable","JSON","parse","parseJSON","localStorage","getItem","setItem","stringify","passive","beforeAll","state","buff","bonus","times","afterHit","totalHit","afterWeapon","weapon","hit","includes","poison","atk","turn","moves","isShadow","cost","damage","processWeapon","fire","getFireResist","beforeHit","targetBuff","find","id","injuryBonus","fireResist","beforeWeapon","range","water","getDef","atkType","casting","WEAPON_MOD","F","E","D","C","B","A","S","SS","SSS","Ex","State","constructor","hp","def","int","mdef","waterResist","poisonResist","lightningResist","freeze","poisonTurns","stance","maxTargets","targets","lightning","clone","extra","s","assign","getResist","reduce","output","getWaterResist","getPoisonResist","getLightningResist","getInjuryBonus","getWaterAtk","getAtk","getFireAtk","getLightningAtk","getPoisonAtk","simulate","weapons","passiveIds","allPassive","stages","calculatePassive","result","calculateDamage","finalDamage","finalCost","summary","executeCost","Math","ceil","cp","max","modType","modLv","weaponAtk","charAtk","lv","Error","getWeaponMod","getPoisonDamage","min","resist","currentHit","use","trap","trapState","cond","time","newBonus","addBuff","gain","buffs","newBuffs","ids","oldPoisonDamage","enemy","t_value","t1_value","label","span","create_if_block","if_block","t","toFixed","t5_value","select_change_handler_1","span0","span1","span2","div","button0","button1","button2","button3","t1","t3","t3_value","t5","t0_value","t2_value","t4_value","t6_value","t8_value","span3","span4","t0","t2","t4","t6","t8","t70_value","t72_value","call","h1","div0","div1","input0","input1","input2","input3","span5","input4","span6","input5","span7","input6","span8","input7","span9","input8","label0","input9","span10","label1","input10","span11","label2","input11","span12","label3","input12","span13","span14","input13","span15","input14","h20","div2","span16","span17","span18","span19","span20","span21","span22","span23","span24","h21","div3","span25","footer","t68","t68_value","current","t70","t72","storeKey","unshift","NAME_TO_WEAPON","fromEntries","w","compareList","sortMethod","choosedEnemy","combos","calcedCompareList","sortedCompareList","addCombo","deleteCombo","moveCombo","deleteCompare","$compareList","$hp","$atk","$def","$int","$mdef","$fire","$freeze","$poison","$lightning","$poisonTurns","$stance","$passiveIds","$fireResist","$waterResist","$poisonResist","$lightningResist","$$invalidate","names","n","join","slice","$sortMethod","sort","checked","group","get_binding_group_value","$$binding_groups","row","grade"],"mappings":"yCAAA,SAASA,IAAU,CAgBnB,SAASC,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CAgCA,SAASE,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,KAAUK,GACzB,GAAa,MAATL,EACA,OAAOhB,EAEX,MAAMsB,EAAQN,EAAMO,aAAaF,GACjC,OAAOC,EAAME,YAAc,IAAMF,EAAME,cAAgBF,CAC3D,CAOiCC,CAAUP,EAAOC,GAClD,CAqFA,SAASQ,EAAgBT,EAAOU,EAAKC,GAEjC,OADAX,EAAMY,IAAID,GACHD,CACX,CA2JA,SAASG,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,EACvB,CAoDA,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,KACxC,CASA,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,EAChC,CACA,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,EAE5B,CACA,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,EAClC,CAmBA,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CAIA,SAASI,EAAOtB,EAAMuB,EAAOC,EAASC,GAElC,OADAzB,EAAK0B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMzB,EAAK2B,oBAAoBJ,EAAOC,EAASC,EAC1D,CA6BA,SAASG,EAAK5B,EAAM6B,EAAWjC,GACd,MAATA,EACAI,EAAK8B,gBAAgBD,GAChB7B,EAAK+B,aAAaF,KAAejC,GACtCI,EAAKgC,aAAaH,EAAWjC,EACrC,CAiDA,SAASqC,EAAUrC,GACf,MAAiB,KAAVA,EAAe,MAAQA,CAClC,CAiIA,SAASsC,EAAShB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKiB,YAAchB,IACnBD,EAAKC,KAAOA,EACpB,CACA,SAASiB,EAAgBC,EAAOzC,GAC5ByC,EAAMzC,MAAiB,MAATA,EAAgB,GAAKA,CACvC,CAiBA,SAAS0C,EAAcC,EAAQ3C,GAC3B,IAAK,IAAIe,EAAI,EAAGA,EAAI4B,EAAOd,QAAQb,OAAQD,GAAK,EAAG,CAC/C,MAAM6B,EAASD,EAAOd,QAAQd,GAC9B,GAAI6B,EAAOC,UAAY7C,EAEnB,YADA4C,EAAOE,UAAW,EAGzB,CACDH,EAAOI,eAAiB,CAC5B,CAOA,SAASC,EAAaL,GAClB,MAAMM,EAAkBN,EAAOO,cAAc,aAAeP,EAAOd,QAAQ,GAC3E,OAAOoB,GAAmBA,EAAgBJ,OAC9C,CAyDA,SAASM,EAAajC,EAASC,EAAMiC,GACjClC,EAAQmC,UAAUD,EAAS,MAAQ,UAAUjC,EACjD,CAwNA,IAAImC,EACJ,SAASC,EAAsBnE,GAC3BkE,EAAoBlE,CACxB,CA0DA,MAAMoE,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBzF,GACzBmF,EAAiBjE,KAAKlB,EAC1B,CACA,SAAS0F,EAAmB1F,GACxBoF,EAAgBlE,KAAKlB,EACzB,CAmBA,MAAM2F,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBhB,EACxB,EAAG,CAGC,KAAOc,EAAWZ,EAAiBxC,QAAQ,CACvC,MAAM5B,EAAYoE,EAAiBY,GACnCA,IACAb,EAAsBnE,GACtBmF,EAAOnF,EAAUG,GACpB,CAID,IAHAgE,EAAsB,MACtBC,EAAiBxC,OAAS,EAC1BoD,EAAW,EACJX,EAAkBzC,QACrByC,EAAkBe,KAAlBf,GAIJ,IAAK,IAAI1C,EAAI,EAAGA,EAAI2C,EAAiB1C,OAAQD,GAAK,EAAG,CACjD,MAAMzB,EAAWoE,EAAiB3C,GAC7BmD,EAAeO,IAAInF,KAEpB4E,EAAeQ,IAAIpF,GACnBA,IAEP,CACDoE,EAAiB1C,OAAS,CAClC,OAAawC,EAAiBxC,QAC1B,KAAO2C,EAAgB3C,QACnB2C,EAAgBa,KAAhBb,GAEJI,GAAmB,EACnBG,EAAeS,QACfpB,EAAsBe,EAC1B,CACA,SAASC,EAAOhF,GACZ,GAAoB,OAAhBA,EAAGqF,SAAmB,CACtBrF,EAAGgF,SACH5F,EAAQY,EAAGsF,eACX,MAAMC,EAAQvF,EAAGuF,MACjBvF,EAAGuF,MAAQ,EAAE,GACbvF,EAAGqF,UAAYrF,EAAGqF,SAASG,EAAExF,EAAGyF,IAAKF,GACrCvF,EAAG0F,aAAapG,QAAQmF,EAC3B,CACL,CAeA,MAAMkB,EAAW,IAAIf,IAerB,SAASgB,EAAcC,EAAOC,GACtBD,GAASA,EAAMrE,IACfmE,EAASI,OAAOF,GAChBA,EAAMrE,EAAEsE,GAEhB,CACA,SAASE,EAAeH,EAAOC,EAAO5E,EAAQnB,GAC1C,GAAI8F,GAASA,EAAMI,EAAG,CAClB,GAAIN,EAAST,IAAIW,GACb,OACJF,EAASR,IAAIU,GAxBjBK,UAyBWC,EAAEjG,MAAK,KACVyF,EAASI,OAAOF,GACZ9F,IACImB,GACA2E,EAAMnE,EAAE,GACZ3B,IACH,IAEL8F,EAAMI,EAAEH,EACX,MACQ/F,GACLA,GAER,CAupBA,SAASqG,EAAKvG,EAAW+B,EAAM7B,GAC3B,MAAMsG,EAAQxG,EAAUG,GAAGsG,MAAM1E,QACnB2E,IAAVF,IACAxG,EAAUG,GAAGwG,MAAMH,GAAStG,EAC5BA,EAASF,EAAUG,GAAGyF,IAAIY,IAElC,CACA,SAASI,EAAiBZ,GACtBA,GAASA,EAAMM,GACnB,CAIA,SAASO,EAAgB7G,EAAWe,EAAQI,EAAQ2F,GAChD,MAAMtB,SAAEA,EAAQuB,SAAEA,EAAQ3G,WAAEA,EAAUyF,aAAEA,GAAiB7F,EAAUG,GACnEqF,GAAYA,EAASwB,EAAEjG,EAAQI,GAC1B2F,GAEDlC,GAAoB,KAChB,MAAMqC,EAAiBF,EAASG,IAAIhI,GAAKiI,OAAOzH,GAC5CU,EACAA,EAAWC,QAAQ4G,GAKnB1H,EAAQ0H,GAEZjH,EAAUG,GAAG4G,SAAW,EAAE,IAGlClB,EAAapG,QAAQmF,EACzB,CACA,SAASwC,EAAkBpH,EAAW0B,GAClC,MAAMvB,EAAKH,EAAUG,GACD,OAAhBA,EAAGqF,WACHjG,EAAQY,EAAGC,YACXD,EAAGqF,UAAYrF,EAAGqF,SAAS3D,EAAEH,GAG7BvB,EAAGC,WAAaD,EAAGqF,SAAW,KAC9BrF,EAAGyF,IAAM,GAEjB,CACA,SAASyB,EAAWrH,EAAW2B,IACI,IAA3B3B,EAAUG,GAAGuF,MAAM,KACnBtB,EAAiB/D,KAAKL,GA30BrB2E,IACDA,GAAmB,EACnBH,EAAiB8C,KAAKrC,IA20BtBjF,EAAUG,GAAGuF,MAAM6B,KAAK,IAE5BvH,EAAUG,GAAGuF,MAAO/D,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CACA,SAAS6F,EAAKxH,EAAWyC,EAASgF,EAAUC,EAAiBC,EAAWlB,EAAOmB,EAAelC,EAAQ,EAAE,IACpG,MAAMmC,EAAmB3D,EACzBC,EAAsBnE,GACtB,MAAMG,EAAKH,EAAUG,GAAK,CACtBqF,SAAU,KACVI,IAAK,KAELa,QACAtB,OAAQlG,EACR0I,YACAhB,MAAOvH,IAEP2H,SAAU,GACV3G,WAAY,GACZ0H,cAAe,GACfrC,cAAe,GACfI,aAAc,GACdkC,QAAS,IAAIC,IAAIvF,EAAQsF,UAAYF,EAAmBA,EAAiB1H,GAAG4H,QAAU,KAEtFzH,UAAWlB,IACXsG,QACAuC,YAAY,EACZC,KAAMzF,EAAQ1B,QAAU8G,EAAiB1H,GAAG+H,MAEhDN,GAAiBA,EAAczH,EAAG+H,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAhI,EAAGyF,IAAM6B,EACHA,EAASzH,EAAWyC,EAAQgE,OAAS,CAAE,GAAE,CAAC9E,EAAGhB,KAAQyH,KACnD,MAAMxH,EAAQwH,EAAKxG,OAASwG,EAAK,GAAKzH,EAOtC,OANIR,EAAGyF,KAAO+B,EAAUxH,EAAGyF,IAAIjE,GAAIxB,EAAGyF,IAAIjE,GAAKf,MACtCT,EAAG8H,YAAc9H,EAAGwG,MAAMhF,IAC3BxB,EAAGwG,MAAMhF,GAAGf,GACZuH,GACAd,EAAWrH,EAAW2B,IAEvBhB,CAAG,IAEZ,GACNR,EAAGgF,SACHgD,GAAQ,EACR5I,EAAQY,EAAGsF,eAEXtF,EAAGqF,WAAWkC,GAAkBA,EAAgBvH,EAAGyF,KAC/CnD,EAAQ1B,OAAQ,CAChB,GAAI0B,EAAQ4F,QAAS,CAEjB,MAAMC,EA33ClB,SAAkBxG,GACd,OAAOyG,MAAMC,KAAK1G,EAAQ2G,WAC9B,CAy3C0BC,CAASjG,EAAQ1B,QAE/BZ,EAAGqF,UAAYrF,EAAGqF,SAASmD,EAAEL,GAC7BA,EAAM7I,QAAQ4B,EACjB,MAGGlB,EAAGqF,UAAYrF,EAAGqF,SAASc,IAE3B7D,EAAQmG,OACR7C,EAAc/F,EAAUG,GAAGqF,UAC/BqB,EAAgB7G,EAAWyC,EAAQ1B,OAAQ0B,EAAQtB,OAAQsB,EAAQqE,eAEnE7B,GACH,CACDd,EAAsB0D,EAC1B,CAiDA,MAAMgB,EACFC,WACI1B,EAAkB2B,KAAM,GACxBA,KAAKD,SAAW7J,CACnB,CACD+J,IAAIC,EAAM/I,GACN,MAAMI,EAAayI,KAAK5I,GAAGG,UAAU2I,KAAUF,KAAK5I,GAAGG,UAAU2I,GAAQ,IAEzE,OADA3I,EAAUD,KAAKH,GACR,KACH,MAAMsG,EAAQlG,EAAU4I,QAAQhJ,IACjB,IAAXsG,GACAlG,EAAU6I,OAAO3C,EAAO,EAAE,CAErC,CACD4C,KAAKC,GA35DT,IAAkBC,EA45DNP,KAAKQ,QA55DCD,EA45DkBD,EA35DG,IAA5BhK,OAAOmK,KAAKF,GAAK1H,UA45DhBmH,KAAK5I,GAAG8H,YAAa,EACrBc,KAAKQ,MAAMF,GACXN,KAAK5I,GAAG8H,YAAa,EAE5B,yDC57DcrC,EAAI,+CAFPA,EAAM,GAAC6D,QAAU7D,EAAK,mBACpBA,EAAM,GAAC8D,IAAM,WAF/BxI,EAGiCH,EAAA4I,EAAAxI,4BAArByE,EAAI,6BAAGA,EAAI,sBAFPA,EAAM,GAAC6D,QAAU7D,EAAK,wBACpBA,EAAM,GAAC8D,IAAM,iEAbpBE,EAAMH,MAAEA,EAAKvH,KAAEA,GAAImH,4HAGxBO,EAAOH,QAAUA,OACnBG,EAAOH,MAAQA,EAAKG,OACpBA,EAAOF,IAAM,EAACE,QAEdA,EAAOF,MAAQ,EAACE,yFCPpB,MAAMC,EAAQC,SAASC,SAASF,MAAM,sBACzBG,EAAeH,EAAM,IAAmB,UAAbA,EAAM,GAA2BA,EAAM,GAAhB,0YCG3C9F,EAAAkG,EAAA,SAAS,UAATC,iCACAnG,EAAAoG,EAAA,SAAS,QAATD,iCACAnG,EAAAqG,EAAA,SAAS,SAATF,iCACAnG,EAAAsG,EAAA,SAAS,SAATH,yCAJpBhJ,EAKKH,EAAAuJ,EAAAnJ,GAJHL,EAA0DwJ,EAAAL,UAC1DnJ,EAA+DwJ,EAAAH,UAC/DrJ,EAAiEwJ,EAAAF,UACjEtJ,EAAiEwJ,EAAAD,+FCLnE,MAAME,GAAmB,GCCzB,MAAMC,GAAM,4BACNC,GAAQ,IAAIzC,IAEX,SAAS0C,GAAS3I,EAAM4I,GAC7B,GAAIF,GAAMpF,IAAItD,GAAO,OAAO0I,GAAMG,IAAI7I,GAEtC,MAAM9B,EDSR,SAAkBW,EAAOiK,EAAQ5L,GAC7B,IAAI6L,EACJ,MAAMC,EAAc,IAAIhG,IACxB,SAASlE,EAAImK,GACT,GAAIpL,EAAegB,EAAOoK,KACtBpK,EAAQoK,EACJF,GAAM,CACN,MAAMG,GAAaV,GAAiB3I,OACpC,IAAK,MAAMsJ,KAAcH,EACrBG,EAAW,KACXX,GAAiBlK,KAAK6K,EAAYtK,GAEtC,GAAIqK,EAAW,CACX,IAAK,IAAItJ,EAAI,EAAGA,EAAI4I,GAAiB3I,OAAQD,GAAK,EAC9C4I,GAAiB5I,GAAG,GAAG4I,GAAiB5I,EAAI,IAEhD4I,GAAiB3I,OAAS,CAC7B,CACJ,CAER,CAmBD,MAAO,CAAEf,MAAKsE,OAlBd,SAAgBhG,GACZ0B,EAAI1B,EAAGyB,GACV,EAgBqBJ,UAftB,SAAmBtB,EAAKiM,EAAalM,GACjC,MAAMiM,EAAa,CAAChM,EAAKiM,GAMzB,OALAJ,EAAYzF,IAAI4F,GACS,IAArBH,EAAYK,OACZN,EAAOD,EAAMhK,IAAQ5B,GAEzBC,EAAI0B,GACG,KACHmK,EAAY7E,OAAOgF,GACM,IAArBH,EAAYK,OACZN,IACAA,EAAO,KACV,CAER,EAEL,CCjDgBO,CAYhB,SAAmBnJ,GACjB,IACE,OAAOoJ,KAAKC,MAAMrJ,EAGnB,CAFC,MAED,CACH,CAjBIsJ,CAAUC,aAAaC,QAAQ,GAAGlB,MAAOzI,OACzC4I,GAOF,OALA1K,EAAMO,WAAUI,GACd6K,aAAaE,QAAQ,GAAGnB,MAAOzI,IAAQuJ,KAAKM,UAAUhL,MAGxD6J,GAAM5J,IAAIkB,EAAM9B,GACTA,CACT,CCpBA,IAAe4L,GAAA,CACb,CACE9J,KAAM,cACNkH,KAAM,QACN6C,UAAWC,IACTA,EAAMC,KAAK3L,KAAK,CAAC4L,MAAO,GAAIC,MAAO,IAAI,GAG3C,CACEnK,KAAM,aACNkH,KAAM,QACN6C,UAAWC,IACTA,EAAMC,KAAK3L,KAAK,CAAC4L,MAAO,GAAIC,MAAO,IAAI,GAG3C,CACEnK,KAAM,gBACNkH,KAAM,MACNkD,SAAUJ,IACRA,EAAMC,KAAK3L,KAAK,CAAC4L,MAAO,EAAGC,MAAO,IAAI,GAG1C,CACEnK,KAAM,qBACNkH,KAAM,MACNkD,SAAUJ,IACe,IAAnBA,EAAMK,UACRL,EAAMC,KAAK3L,KAAK,CAAC4L,MAAO,GAAoBC,MAAO,IACpD,GAGL,CACEnK,KAAM,eACNkH,KAAM,MACNoD,YAAa,CAACN,EAAOO,KACfP,EAAMQ,MAAQD,EAAOvK,KAAKyK,SAAS,OACrCT,EAAMU,OAAOpM,KAAK,CAChBqM,IAAK,IACLC,KAAM,EACNV,MAAO,GAEV,GAGL,CACElK,KAAM,WACNkH,KAAM,MACN6C,UAAWC,IACTA,EAAMa,MAAQ,EACdb,EAAMc,UAAW,CAAK,EAExBR,YAAa,CAACN,EAAOO,KACnB,GAAoB,OAAhBA,EAAOvK,KAET,YADAgK,EAAMa,QAGR,GAAIb,EAAMc,SAAU,OAEpB,IAAIH,IAACA,EAAGV,KAAEA,EAAIc,KAAEA,EAAIC,OAAEA,GAAUhB,EAChCA,EAAMc,UAAW,EACjBd,EAAMW,IAAM,KACZX,EAAMC,KAAO,GACb,IAAK,IAAIrK,EAAI,EAAGA,EAAIoK,EAAMa,MAAOjL,IAG/BoK,EAAMiB,cAAcV,GACpBS,GAAUhB,EAAMgB,OAElBhB,EAAMW,IAAMA,EACZX,EAAMC,KAAOA,EACbD,EAAMe,KAAOA,EACbf,EAAMc,UAAW,EACjBd,EAAMgB,OAASA,CAAM,GAGzB,CACEhL,KAAM,iBACNkH,KAAM,MACNkD,SAAWJ,IACLA,EAAMkB,KACRlB,EAAMgB,QAAU,IAAMhB,EAAMmB,iBAE5BnB,EAAMkB,MAAO,EACblB,EAAMgB,QAAU,IAAMhB,EAAMmB,gBAC7B,GAGL,CACEnL,KAAM,gBACNkH,KAAM,OACNoD,YAAa,CAACN,EAAOO,KACfA,EAAOW,MAAMP,MACfX,EAAMe,MAAQ,EACf,GAGL,CACE/K,KAAM,gBACNkH,KAAM,OACNkE,UAAYpB,IACV,IAAIjM,EAAIiM,EAAMqB,WAAWC,MAAKvN,GAAc,YAATA,EAAEwN,KAChCxN,IACHA,EAAI,CACFwN,GAAI,UACJpB,MAAO,IAETH,EAAMqB,WAAW/M,KAAKP,IAExBA,EAAEyN,YAAcxB,EAAMkB,KAAO,GAAK,EAClCnN,EAAE0N,WAAazB,EAAMkB,MAAQ,GAAK,CAAC,GAGvC,CACElL,KAAM,qBACNkH,KAAM,OACNwE,aAAc,CAAC1B,EAAOO,KACC,UAAjBA,EAAOoB,QACT3B,EAAMe,MAAQ,EACVf,EAAMQ,KACRR,EAAMC,KAAK3L,KAAK,CAAC4L,MAAO,GAAIC,MAAO,IAEtC,GAGL,CACEnK,KAAM,gBACNkH,KAAM,OACNoD,YAAa,CAACN,EAAOO,KACfA,EAAOqB,QACT5B,EAAMgB,QAAqD,GAA1C,IAAMhB,EAAM6B,OAAO,CAACC,QAAS,WAC/C,GAGL,CACE9L,KAAM,YACNkH,KAAM,OACNwE,aAAc,CAAC1B,EAAOO,KAChBA,EAAOwB,SAAW,GAAK/B,EAAMQ,KAC/BR,EAAMC,KAAK3L,KAAK,CAAC4L,MAAO,GAAIC,MAAO,GACpC,GAGL,CACEnK,KAAM,YACNkH,KAAM,OACNoD,YAAa,CAACN,EAAOO,KACdP,EAAMQ,KAA0B,SAAnBD,EAAOuB,UACvB9B,EAAMgB,QAAU,IACjB,GAGL,CACEhL,KAAM,UACNkH,KAAM,OACNoD,YAAa,CAACN,EAAOO,OACdP,EAAMQ,KAAOD,EAAON,MAA2B,SAAnBM,EAAOuB,UACtC9B,EAAMe,MACP,IC1JP,MAAMiB,GAAa,CACjBC,EAAG,IACHC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,EAAG,KACHC,GAAI,IACJC,IAAK,KACLC,GAAI,KAEN,IAAK,MAAMjE,KAAOuD,GAChBA,GAAW,GAAGvD,MAAUuD,GAAWvD,GAAO,GAS5C,MAAMkE,GACJC,aAAYC,GACVA,EAAElC,IACFA,EAAGmC,IAAEA,EAAGC,IAAEA,EAAGC,KAAEA,EAAIvB,WACnBA,EAAUwB,YAAEA,EAAWC,aAAEA,EAAYC,gBAAEA,EAAejC,KACtDA,GAAO,EAAKkC,OAAEA,GAAS,EAAK1C,OAAEA,GAAS,EAAK2C,YAC5CA,EAAWC,OAAEA,EAAS,EAACC,WAAEA,EAAa,EAACzD,QACvCA,IAEA9C,KAAK6F,GAAKA,EACV7F,KAAK2D,IAAMA,EACX3D,KAAK8F,IAAMA,EACX9F,KAAK+F,IAAMA,EACX/F,KAAKgG,KAAOA,EAEZhG,KAAKyE,WAAaA,EAClBzE,KAAKiG,YAAcA,EACnBjG,KAAKkG,aAAeA,EACpBlG,KAAKmG,gBAAkBA,EAEvBnG,KAAKqG,YAAcA,EACnBrG,KAAKuG,WAAaA,EAClBvG,KAAK8C,QAAUA,EAEf9C,KAAKgE,OAAS,EACdhE,KAAKwD,IAAM,EACXxD,KAAKqD,SAAW,EAChBrD,KAAKsG,OAASA,EACdtG,KAAKqD,SAAW,EAChBrD,KAAKiD,KAAO,GACZjD,KAAKqE,WAAa,GAClBrE,KAAKwG,QAAU,EAEfxG,KAAK0D,OAASA,EAAS,CAAC,CAACC,IAAK,EAAGC,KAAM,KAAO,GAC9C5D,KAAKyG,UAAY,GACjBzG,KAAKkE,KAAOA,EACZlE,KAAKoG,OAASA,CACf,CACDM,MAAMC,EAAQ,IACZ,MAAMC,EAAI,IAAIjB,GAAM,CAAA,GAEpB,OADArP,OAAOuQ,OAAOD,EAAG5G,KAAM2G,GAChBC,CACR,CACD/B,OAAOtB,GACL,OAAOsB,GAAO7E,KAAMuD,EACrB,CACDuD,UAAUrF,GAER,OAAQ,KADMzB,KAAKyB,GAAOzB,KAAKqE,WAAW0C,QAAO,CAACC,EAAQjQ,IAAMiQ,GAAUjQ,EAAE0K,IAAQ,IAAI,KACjE,GACxB,CACD0C,gBACE,OAAOnE,KAAK8G,UAAU,aACvB,CACDG,iBACE,OAAOjH,KAAK8G,UAAU,cACvB,CACDI,kBACE,OAAOlH,KAAK8G,UAAU,eACvB,CACDK,qBACE,OAAOnH,KAAK8G,UAAU,kBACvB,CACDM,iBAEE,OADcpH,KAAKqE,WAAW0C,QAAO,CAACC,EAAQjQ,IAAMiQ,GAAUjQ,EAAEyN,aAAe,IAAI,GACnE,KAAO,GACxB,CACD6C,YAAYzC,GACV,OAAO0C,GAAOtH,KAAM4E,EACrB,CACD2C,WAAW7N,GACT,OAAO4N,GAAOtH,KAAMtG,EACrB,CACD8N,gBAAgB9N,GACd,OAAO4N,GAAOtH,KAAMtG,EACrB,CACD+N,aAAa/N,GACX,OAAO4N,GAAOtH,KAAMtG,EACrB,CACDuK,cAAcV,GACZ,OAAOU,GAAcjE,KAAMuD,EAC5B,EAGI,SAASmE,IAASC,QACvBA,EAAOC,WAAEA,KAAelO,IAExB,MAAMoJ,EAAU+E,GAAWzJ,QAAO,CAACxB,EAAGhE,IAAMgP,EAAWnE,SAAS7K,KAC1DkP,EAAS,GACT9E,EAAQ,IAAI2C,GAAM,IAAIjM,EAAOoJ,QAAEA,IACrCiF,GAAiB/E,EAAO,KAAM,aAC9B,IAAK,MAAMO,KAAUoE,EAAS,CAC5B,MAAMK,EAASC,GAAgBjF,EAAOO,GACtCuE,EAAOxQ,KAAK0Q,EACb,CACD,MAAME,EAAcJ,EAAOf,QAAO,CAAC1J,EAAGuJ,IAAMvJ,EAAIuJ,EAAE5C,QAAQ,GACpDmE,EAAYL,EAAOf,QAAO,CAAC1J,EAAGuJ,IAAMvJ,EAAIuJ,EAAE7C,MAAM,GAEtD,MAAO,CACL+D,SACAM,QAAS,CACPpE,OAAQkE,EACRnE,KAAMoE,EACNE,YANgBC,KAAKC,KAAKvF,EAAM6C,GAAKqC,GAAeC,EAOpDK,GAAIN,EAAcC,GAGxB,CAEA,SAAStD,IAAOiB,IAACA,EAAGE,KAAEA,EAAM3B,WAAYpB,IAAO6B,QAACA,IAC9C,MAAgB,SAAZA,GACY,UAAZA,GAAmC,SAAZA,GAAkC,WAAZA,GAAoC,cAAZA,EAD1C,EAIf,UAAZA,EACKwD,KAAKG,IAAIzC,EAAO/C,EAAK8D,QAAO,CAACC,EAAQjQ,IAAMiQ,GAAUjQ,EAAEiP,MAAQ,IAAI,GAAI,GAEzEsC,KAAKG,IAAI3C,EAAM7C,EAAK8D,QAAO,CAACC,EAAQjQ,IAAMiQ,GAAUjQ,EAAE+O,KAAO,IAAI,GAAI,EAC9E,CAkBA,SAASwB,IAAO3D,IAACA,EAAGoC,IAAEA,EAAG9C,KAAEA,IAAOyF,QAACA,EAAOC,MAAEA,EAAOhF,IAAKiF,EAAY,EAAC1F,MAAEA,EAAQ,IAC7E,MAAM2F,EAAsB,QAAZH,EACd3C,EAAM9C,EAAK8D,QAAO,CAACC,EAAQjQ,IAAMiQ,GAAUjQ,EAAEgP,KAAO,IAAI,GACxDpC,EAAMV,EAAK8D,QAAO,CAACC,EAAQjQ,IAAMiQ,GAAUjQ,EAAE4M,KAAO,IAAI,GAC1D,OAAQiF,GAAaD,EAAQE,EAjJ/B,SAAsBC,GACpB,GAAkB,iBAAPA,EAAiB,OAAOA,EACnC,GAAI9D,GAAW8D,GAAK,OAAO9D,GAAW8D,GACtC,MAAM,IAAIC,MAAM,kBAAkBD,IACpC,CA6IyCE,CAAaL,GAAS,KACxDzF,EAAQ,KAAO,GACtB,CAEA,SAAS+F,IAAgBvF,OAACA,EAAM2C,YAAEA,EAAWH,aAAEA,IAC7C,IAAIlC,EAAS,EACb,IAAK,MAAMpH,KAAK8G,EACT9G,EAAE+G,MACPK,GAAUpH,EAAE+G,IAAM2E,KAAKY,IAAItM,EAAEgH,KAAMyC,GAAezJ,EAAEgH,MAAQ,IAAMsC,GAAgB,KAEpF,OAAOlC,CACT,CAEA,SAAS+D,GAAiB/E,EAAOO,EAAQ9B,GACvCuB,EAAMF,QAAQpM,SAAQkG,GAAKA,EAAE6E,KAAOuB,EAAOO,KAC3CA,IAAS9B,KAAOuB,EAAOO,EACzB,CAEA,SAASU,GAAcjB,EAAOO,GAC5BP,EAAMe,KAAOR,EAAOwB,SAAWxB,EAAOQ,KACtCf,EAAMQ,IAAMD,EAAOC,MAAQD,EAAOI,KAAOJ,EAAOoF,MAAQ,EAAI,GAC5D3F,EAAMgB,OAAS,EACfhB,EAAMwD,QAAU8B,KAAKY,IAAIlG,EAAMuD,WAAYhD,EAAOiD,SAAW,GAC7D,MAAMV,EAAMjB,GAAO7B,EAAOO,GACpB4F,EA5CR,SAAmBnG,GAAO8B,QAACA,IACzB,MAAgB,SAAZA,EACK9B,EAAMmB,gBAEC,UAAZW,EACK9B,EAAMiE,iBAEC,WAAZnC,EACK9B,EAAMkE,kBAEC,cAAZpC,EACK9B,EAAMmE,qBAER,CACT,CA8BiBL,CAAU9D,EAAOO,GAChCwE,GAAiB/E,EAAOO,EAAQ,gBAChC,IAAK,IAAI3K,EAAI,EAAGA,EAAIoK,EAAMQ,IAAK5K,IAAK,CAClCmP,GAAiB/E,EAAOO,EAAQ,aAChCP,EAAMoG,WAAaxQ,EAAI,EACvBoK,EAAMK,WACN,IAAIM,EAAM2D,GAAOtE,EAAOO,GACxBI,GAAOX,EAAMC,KAAK8D,QAAO,CAACC,EAAQjQ,IAAMiQ,GAAUjQ,EAAEmM,OAASnM,EAAEmM,MAAQ,KAAO,IAAM,IAAI,GACpFK,EAAO+C,QAAQ+C,MAAQrG,EAAMsD,SAC/B3C,KAASJ,EAAO+C,OAAOpD,OAAS,GAAK,KAAO,KAE9CF,EAAMgB,QAAUsE,KAAKG,IAAI9E,EAAMmC,EAAK,GAAKqD,EAASnG,EAAMoE,iBAAmBpE,EAAMwD,QAC7ExD,EAAMyD,WAAW9C,MACnBX,EAAMgB,QAAUhB,EAAMyD,UAAU9C,KAAO,IAAMX,EAAMmD,iBAAmB,IAAMnD,EAAMwD,SAEpFuB,GAAiB/E,EAAOO,EAAQ,WACjC,CAOD,GALIP,EAAMQ,MACRR,EAAMC,KAAOD,EAAMC,KAAK9E,KAAIpH,IAAM,IAAIA,EAAGoM,MAAOpM,EAAEoM,MAAQ,MAAK/E,QAAOrH,GAAKA,EAAEoM,MAAQ,IACrFH,EAAMqB,WAAarB,EAAMqB,WAAWlG,KAAIpH,IAAM,IAAIA,EAAGoM,MAAOpM,EAAEoM,MAAQ,MAAK/E,QAAOrH,GAAKA,EAAEoM,MAAQ,KAG/FI,EAAO+F,KAAM,CACf,MAAMC,EAAYvG,EAAM0D,MAAM,CAAC5D,QAAS,GAAIG,KAAM,KAClDsG,EAAUtF,cAAcV,EAAO+F,MAC/BtG,EAAMgB,QAAUuF,EAAUvF,MAC3B,CAgBD,IAdIT,EAAOW,MAAUX,EAAOW,KAAKsF,OAAQjG,EAAOW,KAAKsF,KAAKxG,KACxDA,EAAMgB,QAAUhB,EAAMuE,WAAWhE,EAAOW,MAAQlB,EAAMmB,gBAAkBnB,EAAMwD,QAC1EjD,EAAOW,KAAKuF,OACdzG,EAAMkB,MAAO,KAIbX,EAAOqB,OAAWrB,EAAOqB,MAAM4E,OAAQjG,EAAOqB,MAAM4E,KAAKxG,KAC3DA,EAAMgB,QAAUhB,EAAMqE,YAAY9D,EAAOqB,QAAU,IAAM5B,EAAMiD,aAAe,IAAMjD,EAAMwD,QACtFjD,EAAOqB,MAAM6E,OACfzG,EAAMoD,QAAS,IAIf7C,EAAOkD,aAAelD,EAAOkD,UAAU+C,MAAQjG,EAAOkD,UAAU+C,KAAKxG,IAAS,CAChF,MAAMW,EAAMX,EAAMwE,gBAAgBjE,EAAOkD,WACzCzD,EAAMgB,QAAUL,GAAO,IAAMX,EAAMmD,iBAAmB,IAAMnD,EAAMwD,UAC7DxD,EAAMyD,UAAU9C,KAAOJ,EAAOkD,UAAUgD,KAAOzG,EAAMyD,UAAUgD,QAClEzG,EAAMyD,UAAU9C,IAAMA,EACtBX,EAAMyD,UAAUgD,KAAOlG,EAAOkD,UAAUgD,KAE3C,CAED,GAAIlG,EAAOG,UAAYH,EAAOG,OAAO8F,MAAQjG,EAAOG,OAAO8F,KAAKxG,IAAS,CAEvE,IAAK,IAAIpK,EAAI,EAAGA,EAAIoK,EAAMwD,QAAS5N,IACjCoK,EAAMU,OAAOpM,KAAK,CAChBqM,IAAKX,EAAMyE,aAAalE,EAAOG,QAC/BE,KAAML,EAAOG,OAAOE,KACpBV,MAAO,IAGPK,EAAOG,OAAOR,QAChBF,EAAMU,OAASV,EAAMU,OAAOvF,KAAIvB,IAC9B,MAAM8M,GAAY9M,EAAEsG,MAAQ,MAAQK,EAAOG,OAAOR,MAAQ,KAAO,IAAM,IACvE,MAAO,IAAItG,EAAGsG,MAAOoF,KAAKY,IAAIQ,EAAU,KAAK,IAGlD,CAEGnG,EAAON,MACT0G,GAAQ3G,EAAMC,KAAMM,EAAON,MAEzBM,EAAOc,YACTsF,GAAQ3G,EAAMqB,WAAYd,EAAOc,YAG/Bd,EAAO+C,QAAQ+C,MAAQrG,EAAMsD,QAAU/C,EAAO+C,OAAOrD,MACvD0G,GAAQ3G,EAAMC,KAAMM,EAAO+C,OAAOrD,MAGT,MAAvBM,EAAO+C,QAAQsD,OACjB5G,EAAMsD,OAAS/C,EAAO+C,OAAOsD,MAG/B7B,GAAiB/E,EAAOO,EAAQ,cAClC,CAEA,SAASoG,GAAQE,EAAOC,GACtB,MAAMC,EAAM,IAAI9K,IAAI4K,EAAM1L,KAAI,CAACpH,EAAG6B,IAAM,CAAC7B,EAAEwN,GAAI3L,MAC/C,IAAK,MAAM7B,KAAK+S,EACV/S,EAAEwN,IAAMwF,EAAIzN,IAAIvF,EAAEwN,IACpBsF,EAAME,EAAIlI,IAAI9K,EAAEwN,KAAOxN,EAEvB8S,EAAMvS,KAAKP,EAGjB,CAEA,SAASkR,GAAgBjF,EAAOO,GAC9B,MAAMyG,EAAkBf,GAAgBjG,GAGxC,OAFAiB,GAAcjB,EAAOO,GACrBP,EAAMgB,QAAUiF,GAAgBjG,GAASgH,EAClC,CAAChG,OAAQhB,EAAMgB,OAAQD,KAAMf,EAAMe,KAC5C,CCnSA,IAAekG,GAAA,CACb,CACEjR,KAAM,QACN8M,IAAK,OACLE,KAAM,OACNvB,YAAa,IACbwB,YAAa,GACbC,aAAc,GACdC,iBAAkB,kVCwKG+D,EAAArN,MAAE7D,KAAI,6CAAV6D,EAAC,8BAAhB1E,EAAmCH,EAAAyC,EAAArC,sDA8ChC6I,IAAgBpE,EAAE,IAAAqD,MAAmB,SAAXrD,EAAC,IAACqD,uCAGtBiK,EAAAtN,MAAE7D,KAAI,wGAD0C6D,EAAC,kFAD1D1E,EAGQH,EAAAoS,EAAAhS,GAFNL,EAA0DqS,EAAA9P,cAAvBuC,EAAW,IAAAsD,QAAA7F,EAAAI,gBAC9C3C,EAAqBqS,EAAAC,gFADcxN,EAAW,IAAAsD,QAAA7F,EAAAI,0EAFF4P,CAAAzN,yBT2LzC1D,EAAK,yCS3LP8H,IAAgBpE,EAAE,IAAAqD,MAAmB,SAAXrD,EAAC,IAACqD,MAAeqK,EAAA3N,EAAAC,EAAAF,sDAoBzBuN,EAAArN,MAAE7D,KAAI,+CAAV6D,EAAC,8BAAhB1E,EAAmCH,EAAAyC,EAAArC,kBAAhB,EAAAuE,EAAA,IAAAuN,KAAAA,EAAArN,MAAE7D,KAAI,KAAAmB,EAAAqQ,EAAAN,kBAAVrN,EAAC,mHAIjBsN,EAAAtN,EAAO,GAAAiL,OAAOjL,QAAIkH,KAAI,KAGtBlH,EAAM,GAACiL,OAAOjL,QAAImH,OAAOyG,QAAQ,GAAC,GAGhCC,IAAA7N,KAAOiL,OAAOjL,EAAI,MAAAmH,QAAU,GAAKnH,EAAO,GAAAiL,OAAOjL,EAAC,MAAGkH,MAAM0G,QAAQ,GAAC,KAX9D5N,EAAO,wBAAZhE,OAAID,GAAA,8gBADkB,IAANiE,EAAM,KAAAhB,EAAA8O,yIAA1BxS,EAISH,EAAAwC,EAAApC,kDAJWyE,EAAM,cAK1B1E,EAEOH,EAAA4S,EAAAxS,mBACPD,EAEOH,EAAA6S,EAAAzS,mBACPD,EAEOH,EAAA8S,EAAA1S,mBACPD,EAKMH,EAAA+S,EAAA3S,GAJJL,EAAyDgT,EAAAC,UACzDjT,EAAwDgT,EAAAE,UACxDlT,EAAsDgT,EAAAG,UACtDnT,EAAkDgT,EAAAI,gIAjB3CtO,EAAO,WAAZhE,OAAID,GAAA,EAAA,mHAAJC,mBADgBgE,EAAM,KAMvB,EAAAF,EAAA,IAAAwN,KAAAA,EAAAtN,EAAO,GAAAiL,OAAOjL,QAAIkH,KAAI,KAAA5J,EAAAiR,EAAAjB,kBAGtBtN,EAAM,GAACiL,OAAOjL,QAAImH,OAAOyG,QAAQ,GAAC,KAAAtQ,EAAAkR,EAAAC,GAGhC,EAAA3O,EAAA,IAAA+N,KAAAA,IAAA7N,KAAOiL,OAAOjL,EAAI,MAAAmH,QAAU,GAAKnH,EAAO,GAAAiL,OAAOjL,EAAC,MAAGkH,MAAM0G,QAAQ,GAAC,KAAAtQ,EAAAoR,EAAAb,2JA4BhEc,EAAA3O,MAAI7D,KAAI,GACRyS,EAAA5O,MAAIkH,KAAI,GACR2H,EAAA7O,EAAI,IAAAmH,OAAOyG,QAAQ,GAAC,GACpBkB,EAAA9O,EAAI,IAAA2L,GAAGiC,QAAQ,GAAC,GAChBmB,EAAA/O,MAAIwL,YAAW,kYAJtBlQ,EAAuBH,EAAA4S,EAAAxS,mBACvBD,EAAuBH,EAAA6S,EAAAzS,mBACvBD,EAAoCH,EAAA8S,EAAA1S,mBACpCD,EAAgCH,EAAA6T,EAAAzT,mBAChCD,EAA8BH,EAAA8T,EAAA1T,mBAC9BD,EAA4DH,EAAA4I,EAAAxI,0CALrD,EAAAuE,EAAA,IAAA6O,KAAAA,EAAA3O,MAAI7D,KAAI,KAAAmB,EAAA4R,EAAAP,GACR,EAAA7O,EAAA,IAAA8O,KAAAA,EAAA5O,MAAIkH,KAAI,KAAA5J,EAAA6R,EAAAP,GACR,EAAA9O,EAAA,IAAA+O,KAAAA,EAAA7O,EAAI,IAAAmH,OAAOyG,QAAQ,GAAC,KAAAtQ,EAAA8R,EAAAP,GACpB,EAAA/O,EAAA,IAAAgP,KAAAA,EAAA9O,EAAI,IAAA2L,GAAGiC,QAAQ,GAAC,KAAAtQ,EAAA+R,EAAAP,GAChB,EAAAhP,EAAA,IAAAiP,KAAAA,EAAA/O,MAAIwL,YAAW,KAAAlO,EAAAgS,EAAAP,+eAtBjB/O,EAAM,GAACuL,QAAQrE,KAAI,GACnBqI,GAAAvP,KAAOuL,QAAQpE,OAAOyG,QAAQ,GAAC,GAC/B4B,GAAAxP,KAAOuL,QAAQI,GAAGiC,QAAQ,GAAC,sBAzFzBR,0BAALpR,OAAID,GAAA,8BA8CDkK,0BAALjK,OAAID,GAAA,8BAkBCiE,EAAM,0BAAXhE,OAAID,GAAA,8GAkCuD,IAAXiE,EAAW,gBAAXA,EAAW,yHACA,IAAXA,EAAW,gBAAXA,EAAW,6HACI,IAAXA,EAAW,gBAAXA,EAAW,qHACR,IAAXA,EAAW,gBAAXA,EAAW,0GACa,IAAXA,EAAW,gBAAXA,EAAW,iEAE/DA,EAAiB,0BAAtBhE,OAAID,GAAA,wpEAzG0B,IAAZiE,EAAY,KAAAhB,GAAA,IAAAgB,EAAA,IAAAyP,KAAA9R,uiCANlCrC,EAAmCH,EAAAuU,EAAAnU,8BAInCD,EAQMH,EAAAwU,EAAApU,GAPJL,EAAmByU,EAAA5B,UACnB7S,EAISyU,EAAAhS,oDAJWqC,EAAY,YAKhC9E,EAAkDyU,EAAAxB,YAGpD7S,EA+CMH,EAAAyU,EAAArU,GA9CJL,EAAe0U,EAAA5B,UACf9S,EAAqD0U,EAAAC,OAApB7P,EAAG,YACpC9E,EAAe0U,EAAA3B,UACf/S,EAAuC0U,EAAAE,OAAN9P,EAAI,YACrC9E,EAAe0U,EAAAZ,UACf9T,EAAuC0U,EAAAG,OAAN/P,EAAI,WACrC9E,EAAe0U,EAAAX,UACf/T,EAAuC0U,EAAAI,OAANhQ,EAAI,YACrC9E,EAAe0U,EAAAK,YACf/U,EAAwC0U,EAAAM,SAAPlQ,EAAK,YACtC9E,EAAe0U,EAAAO,YACfjV,EAA8C0U,EAAAQ,SAAbpQ,EAAW,YAC5C9E,EAAe0U,EAAAS,YACfnV,EAA+C0U,EAAAU,SAAdtQ,EAAY,YAC7C9E,EAAe0U,EAAAW,YACfrV,EAAgD0U,EAAAY,SAAfxQ,EAAa,YAC9C9E,EAAe0U,EAAAa,YACfvV,EAAmD0U,EAAAc,SAAlB1Q,EAAgB,YACjD9E,EAGQ0U,EAAAe,IAFNzV,EAA8CyV,GAAAC,eAAT5Q,EAAO,aAC5C9E,EAAiByV,GAAAE,YAEnB3V,EAGQ0U,EAAAkB,IAFN5V,EAA4C4V,GAAAC,eAAP/Q,EAAK,aAC1C9E,EAAiB4V,GAAAE,YAEnB9V,EAGQ0U,EAAAqB,IAFN/V,EAA8C+V,GAAAC,eAATlR,EAAO,aAC5C9E,EAAiB+V,GAAAE,YAEnBjW,EAGQ0U,EAAAwB,IAFNlW,EAAiDkW,GAAAC,eAAZrR,EAAU,aAC/C9E,EAAiBkW,GAAAE,YAEnBpW,EAAmB0U,EAAA2B,YACnBrW,EAA+C0U,EAAA4B,SAAdxR,EAAY,aAC7C9E,EAAiB0U,EAAA6B,YACjBvW,EAA0C0U,EAAA8B,SAAT1R,EAAO,oEAW1C1E,EAAcH,EAAAwW,GAAApW,aAEdD,EAgCMH,EAAAyW,GAAArW,GA/BJL,EAAiC0W,GAAAC,aACjC3W,EAA+B0W,GAAAE,aAC/B5W,EAAiC0W,GAAAG,aACjC7W,EAA6B0W,GAAAI,aAC7B9W,EAA+B0W,GAAAK,oEAuB/B/W,EAAkC0W,GAAAM,aAClChX,EAAkC0W,GAAAO,sBAClCjX,EAA+C0W,GAAAQ,sBAC/ClX,EAA2C0W,GAAAS,uBAG7C/W,EAA4DH,EAAAiT,GAAA7S,aAE5DD,EAAgBH,EAAAmX,GAAA/W,aAEhBD,EAA2DH,EAAAkT,GAAA9S,aAC3DD,EAeMH,EAAAoX,GAAAhX,sHATJL,EAAaqX,GAAAC,qEAWflX,EAESH,EAAAsX,GAAAlX,kDAhHWyE,EAAgB,8TAwFlBA,EAAY,kBAIZA,EAAe,0CAhGtBoN,YAALpR,OAAID,GAAA,EAAA,6HAAJC,4BADgBgE,EAAY,6BAUCA,EAAG,SAAHA,EAAG,gCAEHA,EAAI,SAAJA,EAAI,4BAEJA,EAAI,QAAJA,EAAI,8BAEJA,EAAI,SAAJA,EAAI,6BAEJA,EAAK,SAALA,EAAK,4BAELA,EAAW,SAAXA,EAAW,2BAEXA,EAAY,SAAZA,EAAY,2BAEZA,EAAa,SAAbA,EAAa,2BAEbA,EAAgB,SAAhBA,EAAgB,6BAEVA,EAAO,8BAIPA,EAAK,6BAILA,EAAO,6BAIPA,EAAU,+BAIhBA,EAAY,UAAZA,EAAY,8BAEZA,EAAO,UAAPA,EAAO,6BACjCiG,YAALjK,OAAID,GAAA,EAAA,6HAAJC,yCAkBKgE,EAAM,YAAXhE,OAAID,GAAA,EAAA,4HAAJC,+BAuBKgE,EAAM,GAACuL,QAAQrE,KAAI,KAAA5J,EAAAoV,GAAAC,MACnBC,IAAA,EAAA9S,EAAA,KAAAyP,MAAAA,GAAAvP,KAAOuL,QAAQpE,OAAOyG,QAAQ,GAAC,KAAAtQ,EAAAuV,GAAAtD,MAC/BqD,IAAA,EAAA9S,EAAA,KAAA0P,MAAAA,GAAAxP,KAAOuL,QAAQI,GAAGiC,QAAQ,GAAC,KAAAtQ,EAAAwV,GAAAtD,+CASgBxP,EAAW,0EACXA,EAAW,0EACPA,EAAW,0EACnBA,EAAW,6EACEA,EAAW,+DAE/DA,EAAiB,YAAtBhE,OAAID,GAAA,EAAA,8HAAJC,ulBA7QO8O,QAAAA,EAAOiI,SAAEA,GAAQtP,EAE5BqH,EAAQkI,QAAO,CACb7W,KAAM,KACN+K,KAAsB,UAAhB9C,EAA0B,EAAI,IAGhC,MAAA6O,EAAiBxZ,OAAOyZ,YAAYpI,EAAQxJ,KAAI6R,GAAM,CAAAA,EAAEhX,KAAMgX,MAE9DrM,EAAMhC,GAAY,GAAAiO,QAAgB,iCAClC9J,EAAMnE,GAAQ,WAAa,0BAC3B,MAAAoE,EAAMpE,GAAY,GAAAiO,QAAgB,iCAClC5J,EAAOrE,GAAQ,YAAc,gCAC7BkE,EAAKlE,GAAQ,UAAY,kCAEzB8C,EAAa9C,GAAQ,kBAAoB,8BACzCsE,EAActE,GAAQ,mBAAqB,8BAC3CuE,EAAevE,GAAQ,oBAAsB,8BAC7CwE,EAAkBxE,GAAQ,uBAAyB,8BAEnDuC,EAAOvC,GAAQ,aAAc,+BAC7ByE,EAASzE,GAAQ,eAAgB,+BACjC+B,EAAS/B,GAAQ,eAAgB,+BACjC8E,EAAY9E,GAAQ,kBAAmB,yBAEvC,MAAA0E,EAAc1E,GAAY,GAAAiO,gBAAwB,0BAClD,MAAAtJ,EAAS3E,GAAY,GAAAiO,WAAmB,+BAExChI,EAAajG,GAAQ,GAAIiO,eAAQ,gCAEjCK,EAActO,GAAQ,GAAIiO,gBAAQ,gCAClCM,EAAavO,GAAQ,GAAIiO,eAAQ,CACrClP,MAAO,KACPC,IAAK,QAGHwP,4BAEAC,EAAM,CAAIzI,EAAQ,IAClBK,EAAM,CACRF,OAAM,GACNM,QAAO,CACLpE,OAAQ,EACRD,KAAM,EACNyE,GAAI,IAGJ6H,EAAiB,GACjBC,EAAiB,GACjB5W,EAAO,CAAA,EAsEF,SAAA6W,EAAS3X,GAChBwX,EAAOhQ,OAAOxH,EAAG,EAAGwX,EAAOxX,WAIpB,SAAA4X,GAAY5X,GACfwX,EAAOvX,QAAU,IACrBuX,EAAOhQ,OAAOxH,EAAG,oBAIV6X,GAAU7X,EAAG+H,SACd6J,EAAI4F,EAAOxX,GACjBwX,EAAOhQ,OAAOxH,EAAG,GACjBwX,EAAOhQ,OAAOxH,EAAI+H,EAAK,EAAG6J,UASnB,SAAAkG,GAAc9X,GACrB+X,EAAavQ,OAAOxH,EAAG,8JA3FvBc,EAAO,CACLmM,GAAI+K,EACJjN,IAAKkN,EACL/K,IAAKgL,EACL/K,IAAKgL,EACL/K,KAAMgL,EAEN9M,KAAM+M,EACN7K,OAAQ8K,EACRxN,OAAQyN,EACR1K,UAAW2K,EAEX/K,YAAagL,EACb/K,OAAQgL,EAER1J,WAAY2J,EAEZ9M,WAAY+M,EACZvL,YAAawL,EACbvL,aAAcwL,EACdvL,gBAAiBwL,0CAKnBC,EAAA,EAAA5J,EAASN,GAAQ,IACZhO,EACHiO,QAASyI,2BAKXwB,EAAA,GAAAvB,EAAoBM,EAAaxS,KAAK,CAAA0T,EAAOjZ,WACrC+O,EAAUkK,EAAM1T,KAAI2T,GAAKhC,EAAegC,KACxC9J,EAASN,GACV,IAAAhO,EACHiO,mBAGA3O,KAAM6Y,EAAME,KAAK,KACjBtU,MAAO7E,KACJoP,EAAOI,2DAMdkI,EAAoBD,EAAkB2B,SAClCC,EAAYvR,OACd4P,EAAkB4B,MAAM,CAAApb,EAAGC,KACZD,EAAEmb,EAAYvR,OAAS3J,EAAEkb,EAAYvR,QAAU,EAC1D5J,EAAEmb,EAAYvR,OAAS3J,EAAEkb,EAAYvR,OAAS,EAAI,GACpCuR,EAAYtR,oGAMhChJ,EAAAkO,EAAA+K,EAAMT,EAAatK,IAAM,EAAC+K,GAC1BjZ,EAAAmO,EAAAgL,EAAOX,EAAarK,KAAO,EAACgL,GAC5BnZ,EAAAqO,EAAAgL,EAAQb,EAAanK,MAAQ,EAACgL,GAC9BrZ,EAAA8M,EAAA+M,EAAcrB,EAAa1L,YAAc,EAAC+M,GAC1C7Z,EAAAsO,EAAAwL,EAAetB,EAAalK,aAAe,EAACwL,GAC5C9Z,EAAAuO,EAAAwL,EAAgBvB,EAAajK,cAAgB,EAACwL,GAC9C/Z,EAAAwO,EAAAwL,EAAmBxB,EAAahK,iBAAmB,EAACwL,uBAsBpDhB,EAAarZ,KAAK8Y,EAAOjS,KAAI6R,GAAKA,EAAEhX,sCAU9BlB,EAAG,IAAOkE,IAAI2U,EAAaxS,KAAIZ,GAAKA,EAAE,MACjC,IAAA,MAAAgG,KAAUoE,EACd7P,EAAIwE,IAAIiH,EAAOvK,OAClB2X,EAAarZ,KAAM,CAAAiM,EAAOvK,oCAaVmX,EAAYtV,EAAAmF,0BAUC4Q,EAAG1W,EAAA8F,KAAAnI,4BAEHgZ,EAAI3W,EAAA8F,KAAAnI,4BAEJiZ,EAAI5W,EAAA8F,KAAAnI,4BAEJkZ,EAAI7W,EAAA8F,KAAAnI,4BAEJmZ,EAAK9W,EAAA8F,KAAAnI,4BAEL2Z,EAAWtX,EAAA8F,KAAAnI,4BAEX4Z,EAAYvX,EAAA8F,KAAAnI,4BAEZ6Z,EAAaxX,EAAA8F,KAAAnI,4BAEb8Z,EAAgBzX,EAAA8F,KAAAnI,4BAEVqZ,EAAOlR,KAAAmS,6BAIPlB,EAAKjR,KAAAmS,6BAILhB,EAAOnR,KAAAmS,6BAIPf,EAAUpR,KAAAmS,6BAIhBd,EAAYnX,EAAA8F,KAAAnI,4BAEZyZ,EAAOpX,EAAA8F,KAAAnI,4BAIC0Z,ETsQ3C,SAAiCa,EAAO1X,EAASyX,GAC7C,MAAMta,EAAQ,IAAImE,IAClB,IAAK,IAAIpD,EAAI,EAAGA,EAAIwZ,EAAMvZ,OAAQD,GAAK,EAC/BwZ,EAAMxZ,GAAGuZ,SACTta,EAAM0E,IAAI6V,EAAMxZ,GAAG8B,SAK3B,OAHKyX,GACDta,EAAMsF,OAAOzC,GAEV8E,MAAMC,KAAK5H,EACtB,CShRsDwa,CAAAC,GAAA,GAAAtS,KAAAtF,QAAAsF,KAAAmS,mEA+BxB1B,GAAU7X,GAAI,MACd6X,GAAU7X,EAAG,GACbA,GAAA2X,EAAS3X,GACTA,GAAA4X,GAAY5X,eAeUqZ,EAAWpa,wBACXoa,EAAWpa,wBACPoa,EAAWpa,wBACnBoa,EAAWpa,wBACEoa,EAAWpa,eAQ5C6Y,GAAc6B,EAAI9U,QC7RzC,MAACkK,GAAU,CACd,CACE3O,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACPvP,KAAM,CAAC,CAACC,MAAO,GAAIC,MAAO,KAE5B,CACEnK,KAAM,QACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,GACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,MACTxE,KAAM,CACJP,IAAK,IACL8F,KAAM,IAGV,CACEzQ,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,SACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,GACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,MACTjC,UAAW,CACT9C,IAAK,GACL8F,KAAM,IAGV,CACEzQ,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACPvP,KAAM,CAAC,CAAC8C,IAAK,IAAK5C,MAAO,MAE3B,CACEnK,KAAM,SACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACPtO,KAAM,CACJP,IAAK,IACL8F,KAAM,IAGV,CACEzQ,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,MACTlC,QAAS,IAEX,CACExN,KAAM,MACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,MACTjC,UAAW,CACT9C,IAAK,IACL8F,KAAM,KAGV,CACEzQ,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,MACTxE,KAAM,CACJP,IAAK,IACL8F,KAAM,IAGV,CACEzQ,KAAM,QACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,QACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,GACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,UACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,GACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,MACTzF,KAAM,CAAC,CAAC6C,IAAK,IAAK3C,MAAO,MAE3B,CACEnK,KAAM,QACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACPvP,KAAM,CAAC,CAACC,MAAO,GAAIC,MAAO,KAE5B,CACEnK,KAAM,OACN+K,KAAM,EACNJ,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,SACN+K,KAAM,EACNyO,MAAO,EACP5N,MAAO,CACL+D,MAAO,IACPD,QAAS,MACTe,KAAM,IAGV,CACEzQ,KAAM,QACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,QACT6D,MAAO,IACPD,QAAS,MACTxE,KAAM,CACJyE,MAAO,KACPD,QAAS,MACTe,KAAM,IAGV,CACEzQ,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACPvP,KAAM,CAAC,CAACC,MAAO,GAAIC,MAAO,KAE5B,CACEnK,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,GACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,OAEX,CACE1P,KAAM,OACN+K,KAAM,EACNyO,MAAO,EACPvP,KAAM,CAAC,CAAC8C,IAAK,IAAK5C,MAAO,MAE3B,CACEnK,KAAM,YACN+K,KAAM,EACNyO,MAAO,EACP7O,IAAK,IACLmB,QAAS,OACT6D,MAAO,IACPD,QAAS,MACTlC,QAAS,KAMAvD,GAAO0E,GAAQvJ,QAAO4R,GAAKA,EAAE/M,OAAU+M,EAAErH,QAAUqH,EAAErM"}